<?php
header('Content-Type: text/html; charset=UTF-8');
error_reporting(E_ALL | E_STRICT);
//ini_set('memory_limit', '3M');
set_time_limit(0);
ini_set("max_execution_time", 0);
ignore_user_abort(true);
if (extension_loaded('xdebug'))
{
    if (ini_get('xdebug.show_local_vars') !=0)
    {
        echo 'xDebug detected - Please do not decode the script and run it without this instruction to avoid leaving bits of the script within the log';
        exit(0);
    }
}

$myversion='20230808_2150';
define('NESTED', 10);
define('WARN', 11);
define('CLEAR_THIS', 12);
define('USER_WARN', 13);
define('USER_CLEAR', 14);
define('CLEAR_COLUMN', '~^.*$~s');
$beforeVars = unserialize( base64_decode( 'YToyMTp7aTowO3M6NDoiX0dFVCI7aToxO3M6NToiX1BPU1QiO2k6MjtzOjc6Il9DT09LSUUiO2k6MztzOjY6Il9GSUxFUyI7aTo0O3M6NDoiYXJndiI7aTo1O3M6NDoiYXJnYyI7aTo2O3M6NzoiX1NFUlZFUiI7aTo3O3M6MTE6ImVuY29kaW5nS2V5IjtpOjg7czoxMzoiREFUQUJBU0VfU0lHUyI7aTo5O3M6MTQ6Ik1FUkdFRF9EQl9TSUdTIjtpOjEwO3M6MTY6Ik1BU1NfRE9NQUlOX1NJR1MiO2k6MTE7czoxMjoiRU5DT0RFRF9TSUdTIjtpOjEyO3M6NjoidG9rZW5zIjtpOjEzO3M6MTI6InNpZ3Nfc3RhcnRlZCI7aToxNDtzOjE6ImkiO2k6MTU7czoxNjoiZXhpc3RpbmdUcmlnZ2VycyI7aToxNjtzOjU6InN0YWNrIjtpOjE3O3M6MTA6InByZXZTdHJpbmciO2k6MTg7czo1OiJ0b2tlbiI7aToxOTtzOjc6InRyaWdnZXIiO2k6MjA7czoxMjoiYmVmb3JlQ29uc3RzIjt9' ) );
$DB_SIGS_TEMPLATE = unserialize( base64_decode( 'YTo0OntzOjEwOiJzY3JpcHRfc3JjIjtzOjkyOiJ+PChzY3JpcHR8aWZyYW1lKVxzW148Pl0qP3NyY1xzKj1ccypbIiddP1tePD5dKj88VFJJR0dFUj5bXjw+XSs/PltePD5dKj88LyhzY3JpcHR8aWZyYW1lKT5+aSI7czo5OiJzcGFtX2xpbmsiO3M6NjU6In48YVxzW148Pl0qP2hyZWZccyo9XHMqWyInXT9bXjw+XSo/PFRSSUdHRVI+W148Pl0rPz5bXjw+XSo/PC9hPn5pIjtzOjE0OiJzcGFtX2xpbmtfdGV4dCI7czo0MToifjxbYUFdIFtePl0rPltePl0qPFRSSUdHRVI+W14+XSo8LlthQV0+fmkiO3M6MTg6Imh0dHBfZXF1aXZfcmVmcmVzaCI7czo0MzoifjxtZXRhW1xzXSpodHRwLWVxdWl2W14+XSs8VFJJR0dFUj5bXj5dKz5+aSI7fQ==' ) );
$DB_ROWS_TO_DELETE = unserialize( base64_decode( 'YTozOntzOjk6IldvcmRQcmVzcyI7YTo0OntzOjI3OiI8UFJFRklYPm9wdGlvbnMub3B0aW9uX25hbWUiO2E6Mzp7aTowO3M6MTc6IndwJF9kb29yZ2VuJF9jb2RlIjtpOjE7czoxOToid3AkX2Rvb3JnZW4kX2NvbmZpZyI7aToyO3M6MTI6IndwJF9vcHRpbWl6ZSI7fXM6MTY6IjxQUkVGSVg+dXNlcnMuSUQiO2E6Mjp7aTowO3M6NzoiMTAwMTAwMSI7aToxO3M6NToiOTk5OTkiO31zOjI0OiI8UFJFRklYPnVzZXJzLnVzZXJfbG9naW4iO2E6NTY6e2k6MDtzOjE0OiJ3b3JkcHJlc3NfdXNlciI7aToxO3M6MTA6IndwYWRtaW5yZXEiO2k6MjtzOjk6ImNvbSRfbWFvJSI7aTozO3M6OToiZGtlc3lzdGVtIjtpOjQ7czoxNToid3AkX3VwZGF0ZSRfc3J2IjtpOjU7czoxNzoic29sYXJzYWx2YWRvcjEyMzQiO2k6NjtzOjEwOiJ3cCRfc3lzJF8lIjtpOjc7czoxNToic3VwcG9ydF93b291c2VyIjtpOjg7czo5OiJ3cC1zeXN0ZW0iO2k6OTtzOjc6IkJlYXN0M3giO2k6MTA7czoxNDoid29yZHByZXNkYWRtaW4iO2k6MTE7czoxNDoid29yZHByZXN0YWRtaW4iO2k6MTI7czoyMzoid3Auc2VydmljZS5jb250cm9sbGVyLiUiO2k6MTM7czoxNDoid3B1cGRhdGVzdHJlYW0iO2k6MTQ7czoxMDoic3VwZXJ1c2VyJSI7aToxNTtzOjExOiJtYWkkX2FkbWluMiI7aToxNjtzOjk6IiBzaW1wbGUwJSI7aToxNztzOjk6IndwJF9hZG1pbiI7aToxODtzOjEyOiIlQHN1Y3VyaS5uZXQiO2k6MTk7czoxMjoic3VwcG9ydHV1c2VyIjtpOjIwO3M6MTE6IndwJF91cGRhdGVzIjtpOjIxO3M6OToiU2VuZHNkZXNyIjtpOjIyO3M6MTQ6IndwYWRtaW5yZXF1aXJlIjtpOjIzO3M6NzoiamFrb25kYSI7aToyNDtzOjExOiJtYXphbWFuYWcyNyI7aToyNTtzOjE0OiJzdXBwb3J0bWFnZW50byI7aToyNjtzOjE1OiJzdXBwb3J0LW1hZ2VudG8iO2k6Mjc7czo4OiJzZWNBZG1pbiI7aToyODtzOjk6ImRrJF9hZG1pbiI7aToyOTtzOjEwOiJtYWdtYW5hZ2VyIjtpOjMwO3M6MTM6Im1hZ2VudG91cGRhdGUiO2k6MzE7czoxNDoid29yZHByZXNkYWRtaW4iO2k6MzI7czo3OiJkZXZjb2RlIjtpOjMzO3M6ODoic3lzdGVtd3AiO2k6MzQ7czoyMjoid29vJF9kZWJ1ZyRfdXNlciRfbGluZSI7aTozNTtzOjE4OiJ0cnVzdCRfaGVscCRfYWRtaW4iO2k6MzY7czo4OiJzZW4yMjJvciI7aTozNztzOjk6InN1cHBvcnRwcCI7aTozODtzOjE0OiJhZG1pbmlzdHJhdG9pciI7aTozOTtzOjE1OiJhZG1pbmlzdHJhdG9pcnIiO2k6NDA7czoxMToiSGVsbG9SRFAxMjMiO2k6NDE7czo4OiJ3d3dhZG1pbiI7aTo0MjtzOjg6Ind3d0BkbWluIjtpOjQzO3M6OToiZGVsZXRlZC0lIjtpOjQ0O3M6MTE6IkFkbWluWmF4SEglIjtpOjQ1O3M6MTE6InJ4cmhhY2sxMzM3IjtpOjQ2O3M6MTE6InJ4cmtpbmcxMzM3IjtpOjQ3O3M6MTc6InNpdGVzZW9tYW5hZ2VyNDYxIjtpOjQ4O3M6MTA6Imdob3N0ZWNvZGUiO2k6NDk7czoxODoid29vY29tbWVyY2Vfc2V0dXBzIjtpOjUwO3M6MjY6IjRmNTI2NDMyNGY3NWYxMDMzOWFlYjY3MmFlIjtpOjUxO3M6MTA6ImRldmVsb3BlcnIiO2k6NTI7czoyMToic3VwcG9ydEBlbGVtZW50b3IuY29tIjtpOjUzO3M6OToid3BhZG1pbm5zIjtpOjU0O3M6MTU6IndwZW5naW5lc3VwcG9ydCI7aTo1NTtzOjEwOiJ3b29wYXlwbHVnIjt9czoyNDoiPFBSRUZJWD51c2Vycy51c2VyX2VtYWlsIjthOjEwNzp7aTowO3M6MTE6ImFiY0AxMjMuY29tIjtpOjE7czoyMToiYW5vbnltb3VzZm94QGRqZG4uY2lnIjtpOjI7czo4OiJpZkBpLmNvbSI7aTozO3M6MTg6IkNoZUBub3Jlc3BvbmNlLmNvbSI7aTo0O3M6Mjg6IndwcHJlbWl1bXNlb3BsdWdpbkBnbWFpbC5jb20iO2k6NTtzOjM0OiJzeXN0ZW0kX25vdCRfZGVsZXRlJUB3b3JkcHJlc3MuY29tIjtpOjY7czoxNDoidGVzdEB0ZXN0LnRlc3QiO2k6NztzOjE0OiJob25nQGdtYWlsLmNvbSI7aTo4O3M6MTU6ImpvbGllQGdtYWlsLmNvbSI7aTo5O3M6MTU6ImJ1cm1hQGdtYWlsLmNvbSI7aToxMDtzOjE0OiJsaW5uQGdtYWlsLmNvbSI7aToxMTtzOjIzOiJwZXRyb3dwZXRyMjNAeWFuZGV4LmNvbSI7aToxMjtzOjE0OiJnZEBnb2RhZGR5LmNvbSI7aToxMztzOjI3OiJqZjh4emozQGdoYXJhYndleWh5ZDE2MC5jb20iO2k6MTQ7czoyNzoiajlldTVrQHBob3N3b29kY2xhcmExODUuY29tIjtpOjE1O3M6MjM6IndvcmRjYW1wc0B3b3JkcHJlc3MuY29tIjtpOjE2O3M6Mjc6InNvbGFyc2FsdmFkb3IxMjM0QGdtYWlsLmNvbSI7aToxNztzOjI2OiJKb2huTWlsbGVyODNAd29yZHByZXNzLmNvbSI7aToxODtzOjIwOiJ3cGluZm8xMjM0QGdtYWlsLmNvbSI7aToxOTtzOjE2OiJzeXN0ZW1AbG9jYWxob3N0IjtpOjIwO3M6MTQ6InVzZXJAbG9jYWxob3N0IjtpOjIxO3M6MjI6InN5c3RlbUB3b3JkcHJlc3MubG9jYWwiO2k6MjI7czoyMToid3BzZXJ2aWNlc0B5YW5kZXguY29tIjtpOjIzO3M6MTk6ImpvZWRvdTg3QG5vbWFpbC5jb20iO2k6MjQ7czoxNzoiJUBhZG1pbmlzdHJ3cC5jb20iO2k6MjU7czoxNzoiZWNob2xsJUBnbWFpbC5jb20iO2k6MjY7czoxNzoic3VwZXJ1c2VyJUB5YWhvbyUiO2k6Mjc7czoxODoiJWJhbGFudGZyb21zdW4uY29tIjtpOjI4O3M6MTk6IiVAd29yZHByZXNzLm9yZy5jb20iO2k6Mjk7czoyNToiZHIuaW5qZWN0aW9uaUBob3RtYWlsLmNvbSI7aTozMDtzOjIxOiJjbGVhbmVyQHdvcmRmZW5jZS5jb20iO2k6MzE7czoyMjoid29yZGNhbXBAd29yZHByZXNzLmNvbSI7aTozMjtzOjE3OiJ0ZXN0aW5nQGdtYWlsLmNvbSI7aTozMztzOjE0OiJ0ZXN0QGdtYWlsLmNvbSI7aTozNDtzOjIwOiJ1cGRhdGVAd29yZHByZXNzLm9yZyI7aTozNTtzOjIxOiJzdXBwb3J0QHdvcmRwcmVzcy5vcmciO2k6MzY7czoxODoiaW5mb0B3b3JkcHJlc3Mub3JnIjtpOjM3O3M6MjA6InNnMnBsY0B3b3JkcHJlc3Mub3JnIjtpOjM4O3M6MzU6IndwJF9zeXMkX2FqemJAZGV2LndvcmRwcmVzcy5vcmcuY29tIjtpOjM5O3M6MTQ6ImxpY2tzQG1haW4uY29tIjtpOjQwO3M6Mjc6InN1cHBvcnRAd29yZHByZXNzZW5naW5lLmNvbSI7aTo0MTtzOjI1OiJkb2Nzc0Bpbm1vdGlvbmhvc3RpbmcuY29tIjtpOjQyO3M6MjU6InRyYWlud29yZHByZXNzYWlAc2l0ZS5jb20iO2k6NDM7czoxOToiYXNhZ3JjeWRxeEBuYWlsLmNvbSI7aTo0NDtzOjE5OiJhc25xbXpwa3JkQG5haWwuY29tIjtpOjQ1O3M6Mjc6ImRvLW5vdC1yZW1vdmVAd29yZHByZXNzLmMwbSI7aTo0NjtzOjExOiIxMjNAYWJjLmNvbSI7aTo0NztzOjI1OiJnZXJ0cnVkZUBnYW1lY29uc29sZS5zaXRlIjtpOjQ4O3M6MjQ6ImNvZGVyYnJ1aEBwcm90b25tYWlsLmNvbSI7aTo0OTtzOjEzOiJjYW1lQGVtYWlsLndwIjtpOjUwO3M6MTc6IndwZGV2QGhvdG1haWwuY29tIjtpOjUxO3M6MjM6IndwLXNlY3VyaXR5QGhvdG1haWwuY29tIjtpOjUyO3M6MjQ6ImNvZGVyYnJ1aEBwcm90b25tYWlsLmNvbSI7aTo1MztzOjIxOiJ3YWRtaW53QHdvcmRwcmVzcy5jb20iO2k6NTQ7czoyMzoib3JkZXJub3dAcHJvdG9ubWFpbC5jb20iO2k6NTU7czoyMjoid3d3YWRtaW5Ad29yZHByZXNzLmNvbSI7aTo1NjtzOjIyOiJkMHJrLmY0MTloNzNyQGdtYWlsLmNvIjtpOjU3O3M6MTQ6ImVtYWlsQGVtYWlsLmVtIjtpOjU4O3M6MTg6InRlc3RAd29yZHByZXNzLmNvbSI7aTo1OTtzOjIxOiJzdXBwb3J0QHdvcmRwcmVzcy5jb20iO2k6NjA7czoxODoicm9vdEB3b3JkcHJlc3MuY29tIjtpOjYxO3M6MTY6IndwcmVnQHlhbmRleC5jb20iO2k6NjI7czoxMjoiJUBtYWlsbDUueHl6IjtpOjYzO3M6MTQ6InJvb3RAZ21haWwuY29tIjtpOjY0O3M6MTU6ImFkbWluQGdtYWlsLmNvbSI7aTo2NTtzOjE3OiJzdXBwb3J0QGdtYWlsLmNvbSI7aTo2NjtzOjE5OiJzb2xldmlzaWJsZUBmYmkuZ292IjtpOjY3O3M6MTc6IiVAd3BzdXBwb3J0dGUuY29tIjtpOjY4O3M6MzA6InRlc3QxOTQyMTIzOEBtYWlsLmltYWlsZnJlZS5jYyI7aTo2OTtzOjE2OiIlQGRpZXBsdW5hbC5pbmZvIjtpOjcwO3M6MTk6IiVAbmllc2xlZXZsZXJzLmluZm8iO2k6NzE7czoyMDoiZXR5bXl0YmRpaWZAbWFpbC5jb20iO2k6NzI7czoyMDoiemZvcnRfYWRtaW5AdGVzdC5jb20iO2k6NzM7czoyNjoid2ViZGV2ZWxvcGVyMzUxNEBnbWFpbC5jb20iO2k6NzQ7czoyMDoid2ViZGV2MzUxNEBnbWFpbC5jb20iO2k6NzU7czoyMzoibWlrZWRldmlsNjY5OUBnbWFpbC5jb20iO2k6NzY7czoyMToibm9lbWFpbDMzMzJAZ21haWwuY29tIjtpOjc3O3M6MjQ6ImxvZ2dlcnNoZWxsNDQzQGdtYWlsLmNvbSI7aTo3ODtzOjE1OiJkZWJ1Z0BoZWxwLmhlbHAiO2k6Nzk7czoyMzoid29yZHByZXNzdXNlckBnbWFpbC5jb20iO2k6ODA7czoyMDoid3BzZWN1cmVAaG90bWFpbC5jb20iO2k6ODE7czoxOToiZGV2ZWxvcGVyQGVtYWlsLmNvbSI7aTo4MjtzOjIxOiJ0ZWNoc3VwcG9ydEBlbWFpbC5jb20iO2k6ODM7czoxMDoiQGFkbWluLmNvbSI7aTo4NDtzOjE3OiIlQGhvc3RpbmcuaG9zdGluZyI7aTo4NTtzOjIxOiJub3JlcGx5QHdvcmRwcmVzcy5jb20iO2k6ODY7czoyMzoiZWFtaWxAYWRrb2Zmb2Rmb2ZnZy5jb20iO2k6ODc7czoyMzoid3BtYW5hZ2VyQHdwbWFuYWdlci5jb20iO2k6ODg7czoxNToiYWRtaW5AYWRtaW4uY29tIjtpOjg5O3M6MjM6ImJvdGphbWVzMTAxQG91dGxvb2suY29tIjtpOjkwO3M6MzA6ImhzZ3VkZm5ubXBjZnpsbHJ1ZmV5QGdtYWlsLmNvbSI7aTo5MTtzOjE0OiIlQDFzZWNtYWlsLm5ldCI7aTo5MjtzOjIyOiJzdXBwb3J0QHdwc3VwcGxlZXQuY29tIjtpOjkzO3M6MTM6IiVAbWFpbGJhYi5jb20iO2k6OTQ7czoxNDoiJUBzdHJlc3MuaG9tZXMiO2k6OTU7czoxNDoiJUB3YXliYWNrLnNob3AiO2k6OTY7czoyMjoiJUBjbGluaWNhbHN0dWRlbnQuc2hvcCI7aTo5NztzOjI0OiIlQGNsaW5pY2Fsc3R1ZGVudC5vbmxpbmUiO2k6OTg7czoxODoiJUBsaW5rYnVpbGRpbmcubG9sIjtpOjk5O3M6MTQ6IiVAZ3NhbWFpbC5saXZlIjtpOjEwMDtzOjExOiIlQGJ1bXNzLmZ1biI7aToxMDE7czoxNjoiJUBzdHVkZW50Lm1ha2V1cCI7aToxMDI7czoxOToiJUB0aGluZ3N0b2RvaW4uc2hvcCI7aToxMDM7czo5OiIlQHRjZi5zZGYiO2k6MTA0O3M6MTQ6InRlc3QxQHRlc3QuY29tIjtpOjEwNTtzOjE0OiIlQGFiY2RlMDEuY3lvdSI7aToxMDY7czoyMzoiZS0xMzg0OWYwMTIzMjlAbWFpbC5jb20iO319czo2OiJKb29tbGEiO2E6MTp7czoyMjoiPFBSRUZJWD51c2Vycy51c2VybmFtZSI7YTo3OntpOjA7czoyMDoiam9vbWxhLnVzZXIuaGVscGVyLiUiO2k6MTtzOjExOiJzdXBlcnVzZXI4JSI7aToyO3M6MTE6InN1cGVydXNlcjklIjtpOjM7czoxMToic3VwZXJ1c2VyMSUiO2k6NDtzOjg6Im5ld2FkbWluIjtpOjU7czoxODoid29yZHByZXNzJF9zdXBwb3J0IjtpOjY7czoxMjoiYWRtaW5zdHJhdG9yIjt9fXM6NzoiTWFnZW50byI7YToxOntzOjI0OiI8UFJFRklYPmFkbWluX3VzZXIuZW1haWwiO2E6Mzp7aTowO3M6MTU6ImFtYXN0eUBtYWlsLmNvbSI7aToxO3M6MTk6InJwY3dhZ25lckBwcm90b24ubWUiO2k6MjtzOjIxOiJ3YWduZXJfZ3JvdXBAbWFpbC5jb20iO319fQ==' ) );
$DB_USER_SIGNATURES = unserialize( base64_decode( '' ) );
$DB_NOCLEAN_FOR_ROBOT = unserialize( base64_decode( 'YTo3OntzOjIzOiJpbmplY3RlZC5oaWRkZW4tZGl2LjAwMSI7aToxO3M6MjM6ImluamVjdGVkLmhpZGRlbi1kaXYuMDA3IjtpOjE7czoyNDoiaW5qZWN0ZWQuaGlkZGVuLXNwYW4uMDAxIjtpOjE7czozMToiaW5qZWN0ZWQuanNfY3JlYXRlX2RvY3VtZW50LjAwMyI7aToxO3M6MzM6ImluamVjdGVkLmpzX2RvY3VtZW50X2xvY2F0aW9uLjAwNyI7aToxO3M6MjM6ImhhY2t0b29sLmNjLXN0ZWFsZXIuMDA3IjtpOjE7czoyODoiaW5qZWN0ZWQuanNfY2xpY2tfaGlqYWNrLjAwMSI7aToxO30=' ) );
$DB_SIGS = unserialize( base64_decode( '' ) );
$WHITELIST_STRINGS = unserialize( base64_decode( 'YToxNDp7czoyNzoiaW5qZWN0ZWQuanNfYXBwZW5kQ2hpbGQuMDAxIjthOjg6e2k6MDtzOjE3OiJjZG4ubW91c2VmbG93LmNvbSI7aToxO3M6NDQ6Ind3dy5zaG9wcGVyYXBwcm92ZWQuY29tL3NlYWxzL2NlcnRpZmljYXRlLmpzIjtpOjI7czozMjoiYWNzYmFwcC5jb20vYXBwcy9hcHAvZGlzdC9qcy9hcHAiO2k6MztzOjE2OiJvcGluaW9uc3RhZ2UuY29tIjtpOjQ7czoyNDoiaHR0cHM6Ly9lbWJlZHNvY2lhbC5jb20vIjtpOjU7czoyMjoiY29uY2F0ZW1vamkpOmUud3BlbW9qaSI7aTo2O3M6MzQ6ImRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpO1wiO2k6NztzOjQ3OiJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2hvY2tleXN0YWNrQGxhdGVzdCI7fXM6MzE6ImluamVjdGVkLmpzX2NyZWF0ZV9kb2N1bWVudC4wMTEiO2E6NTp7aTowO3M6MTQ6Ii5nZXRGdWxsWWVhcigpIjtpOjE7czoyNDoiY29udGVudHMuZG9jdW1lbnQud3JpdGUoIjtpOjI7czo0MzoiaHR0cHM6Ly9hcHAucHJvcGVydHl3YXJlLmNvbS9wdy9qYXZhc2NyaXB0LyI7aTozO3M6NDE6ImRvY3VtZW50LndyaXRlKCI8YSBocmUiICsgImY9bWEiICsgImlsdG86IjtpOjQ7czo2MjoiZG9jdW1lbnQud3JpdGUodW5lc2NhcGUoIiUzQ3NjcmlwdCBzcmM9JyIgKyBob3N0ICsgInd1Zm9vLmNvbS8iO31zOjE3OiJiYWNrZG9vci5ldmFsLjAwMyI7YTo0OntpOjA7czoxMToiX2ljbF9zdHJpbmciO2k6MTtzOjQ2OiJmdW5jdGlvbiBmZl9Dc2VsUmVnaW9uX2FjdGlvbihlbGVtZW50LCBhY3Rpb24pIjtpOjI7czozMDoiZmZfcHJvY2Vzc29yLmZvcm1faWQpLnJlc2V0KCk7IjtpOjM7czo5OiI6ImV2YWwoIjsiO31zOjIyOiJpbmplY3RlZC5qc19iYXNlNjQuMDA0IjthOjM6e2k6MDtzOjM1OiImc2hvd19kYXNoX3dpZGdldD0xJmludml0YWlvbl9jb2RlPSI7aToxO3M6NDg6IlBITmpjbWx3ZEQ1aGJHVnlkQ2duVm5Wc2JtVnlZV0pzWlNjcFBDOXpZM0pwY0hRKyI7aToyO3M6MTA4OiJQSE5qY21sd2RDQmhjM2x1WXlCemNtTTlJbWgwZEhCek9pOHZjR0ZuWldGa01pNW5iMjluYkdWemVXNWthV05oZEdsdmJpNWpiMjB2Y0dGblpXRmtMMnB6TDJGa2MySjVaMjl2WjJ4bExtcHoiO31zOjIzOiJpbmplY3RlZC5oaWRkZW4tZGl2LjAzMyI7YToyOntpOjA7czozMjoiPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iX3dwY2YiO2k6MTtzOjUxOiJkaXNwbGF5OiBub25lOyI+PGltZyBzcmM9Imh0dHBzOi8vZm9ybXMuYXdlYmVyLmNvbS8iO31zOjI3OiJpbmplY3RlZC5qc19hcHBlbmRDaGlsZC4wMDYiO2E6Mjp7aTowO3M6MTc6ImNkbi5tb3VzZWZsb3cuY29tIjtpOjE7czo0NDoid3d3LnNob3BwZXJhcHByb3ZlZC5jb20vc2VhbHMvY2VydGlmaWNhdGUuanMiO31zOjIzOiJpbmplY3RlZC5oaWRkZW4tZGl2LjAyMCI7YToyOntpOjA7czoyMDoiOiJwYXR0ZXJucyI7YToxOntpOjAiO2k6MTtzOjIxOiI6Im1zY2FuX3BhdHRlcm5fbWF0Y2giO31zOjMyOiJpbmplY3RlZC5zcGFtLXNlb19qZXJzZXlzLjAwMS4wMiI7YToxOntpOjA7czoxMToiTmV3IEplcnNleTwiO31zOjI2OiJpbmplY3RlZC5zcGFtLXNlb19saW5rLjAwMSI7YToxOntpOjA7czo1MjoiPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0F1dG9tYXR0aWMvamV0cGFjay9wdWxsLyI7fXM6MjQ6ImluamVjdGVkLmpzX3JlZGlyZWN0LjA0MSI7YToxOntpOjA7czoxNToibHVja3lvcmFuZ2UuY29tIjt9czoyMToiaW5qZWN0ZWQuc3BhbS1zZW8uMDIzIjthOjE6e2k6MDtzOjMwOiJKVE5ESlRJeExTMGxNakJDWldkcGJpVXlNRTFoYVciO31zOjI0OiJpbmplY3RlZC5oaWRkZW4tc3Bhbi4wMDEiO2E6MTp7aTowO3M6Mzc6IjwhLS0gcmVhbCBwZW9wbGUgc2hvdWxkIG5vdCBmaWxsIHRoaXMiO31zOjIzOiJpbmplY3RlZC5oaWRkZW4tZGl2LjAyNiI7YToxOntpOjA7czoyOToidWdnYzovL2pqai5xanB2YWFiaW5ndmJhZi5wYnoiO31zOjI1OiJiYWNrZG9vci5wcmVnX3JlcGxhY2UuMDAxIjthOjI6e2k6MDtzOjIwOiJnbG9iYWwgJGZmX3Byb2Nlc3NvciI7aToxO3M6MTQ6InByZWdfcmVwbGFjZSgpIjt9fQ==' ) );
$WHITELIST_TABS = unserialize( base64_decode( 'YTo4OntzOjE0OiI8UFJFRklYPndmSGl0cyI7YToxOntpOjA7czo1OiJ0YWJsZSI7fXM6Mjg6IjxQUkVGSVg+c3BiY19zY2FuX3NpZ25hdHVyZXMiO2E6MTp7aTowO3M6NToidGFibGUiO31zOjMzOiI8UFJFRklYPm9wdGlvbnMucXV0dGVyYV93cF9yZXBvcnQiO2E6MTp7aTowO3M6NToidGFibGUiO31zOjM5OiI8UFJFRklYPm9wdGlvbnMuR09UTUxTX2RlZmluaXRpb25zX2Jsb2IiO2E6MTp7aTowO3M6NToidGFibGUiO31zOjIwOiI8UFJFRklYPm9wdGlvbnMuV1BNUiI7YToxOntpOjA7czo1OiJ0YWJsZSI7fXM6MzI6IjxQUkVGSVg+amhhY2tndWFyZF9pbnB1dF9maWx0ZXJzIjthOjE6e2k6MDtzOjU6InRhYmxlIjt9czoxNjoid2ZJc3N1ZXMubG9uZ01zZyI7YToxOntpOjA7czo1OiJ0YWJsZSI7fXM6MzU6IjxQUkVGSVg+d3ByX3J1Y3NzX3Jlc291cmNlcy5jb250ZW50IjthOjE6e2k6MDtzOjU6InRhYmxlIjt9fQ==' ) );
$SIGS_MASSDOMAINS = unserialize( base64_decode( 'YToxOntzOjY6IjxzY3JpcCI7YToyOntpOjA7aToxMDtzOjM6InNyYyI7YToxMjM6e2k6MDtpOjEwO3M6MjM6ImRlY2xhcmVidXNpbmVzc2dyb3VwLmdhIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wMDEiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoyMToibG93ZXJ0aGVuc2t5YWN0aXZlLmdhIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wMDIiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoxOToic3Ryb25nY2FwaXRhbGFkcy5nYSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDAzIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTE6Im9jbGFzcnYuY29tIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wMDQiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoxNDoib25lbWJvYXJhbi5jb20iO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjAwNSI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjk6Imdub2dsZS5ydSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDA2IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MjQ6InNlY29uZGFyeWluZm9ybXRyYW5kLmNvbSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDA3IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTk6ImxvdmVncmVlbnBlbmNpbHMuZ2EiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjAwOCI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjE5OiJsaW5ldG9hZHNhY3RpdmUuY29tIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wMDkiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoxODoidHJhbnNhbmRmaWVzdGFzLmdhIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wMTAiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoyMzoidHJhdmVsZm9ybmFtZXdhbGtpbmcuZ2EiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjAxMSI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjEzOiJ1cHRvZGF0ZXIubmV0IjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wMTIiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoxMzoiaXRvdXJsaWZlLnRvcCI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDEzIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTU6ImRvbnRraW5ob29vdC50dyI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDE0IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MjA6InRhbGtpbmdhYm91dGZpcm1zLmdhIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wMTUiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoxOToidHJhdmVsaW5za3lkcmVhbS5nYSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDE2IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MzM6IlJFTU9WRURfd3AtdXBkYXRlLWNkbi5jb21fUkVNT1ZFRCI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDE3IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTk6ImRyaXZlcmZvcnRuaWd0bHkuZ2EiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjAxOCI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjIwOiJiZWxvbm5hbm90c2VydmljZS5nYSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDE5IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTY6InNwZWNpYWxhZHZlcy5jb20iO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjAyMCI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjIxOiJ0cnVzdGVkY3BtcmV2ZW51ZS5jb20iO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjAyMSI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjIzOiJjbGFzc2ljcGFydG5lcnNoaXBzLmNvbSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDIyIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTg6ImxlZ2VuZGFyeXRhYmxlLmNvbSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDIzIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTE6ImpzZmlsZS5saWZlIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wMjQiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoxOToiZ3JlZW5nb3BsYXRmb3JtLmNvbSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDI1IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MjE6ImNvZm91bmRlcnNwZWNpYWxzLmNvbSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDI2IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MjE6IndlYXRoZXJwbGxsYXRmb3JtLmNvbSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDI3IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MjA6InNwZWNpYWxibHVlaXRlbXMuY29tIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wMjgiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoyMzoicHJvZ3Jlc3MuY2FzaGRpZ2dlci5jb20iO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjAyOSI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjI1OiJwZXJzcGVjdGl2ZS5jZHNpZ25uZXIuY29tIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wMzAiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoxOToidmlvbGV0bG92ZWxpbmVzLmNvbSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDMxIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6NzoiMC00LnRvcCI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDMyIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6ODoiMDEyLmJvbmQiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjAzMyI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjY6IjFjby5pbyI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDM0IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6NjoiNXBtLmFtIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wMzUiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo2OiI3N3cucHciO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjAzNiI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjY6IjdsYS5sYSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDM3IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6NzoiOTlwdy5wdyI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDM4IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6NjoiOWdlLmdlIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wMzkiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo4OiJiLWQuYm9uZCI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDQwIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTI6ImItaS10LWwteS5jbyI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDQxIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTM6ImItaS10LWwteS5uZXQiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA0MiI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjg6ImItaWQuYmlkIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wNDMiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo5OiJiLWx5LmxpbmsiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA0NCI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjY6ImIteS5ieSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDQ1IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6OToiYml0LWx5LmlzIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wNDYiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoxMToiYml0LWx5Lm1vYmkiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA0NyI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjEwOiJiaXRseS5iZXN0IjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wNDgiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoxMDoiYml0bHkuZ29sZCI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDQ5IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTA6ImJpdGx5Lmhvc3QiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA1MCI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjEzOiJiaXRseS5uZXR3b3JrIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wNTEiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoxMjoiYy1saWNrLmNsaWNrIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wNTIiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo4OiJjLXUuY3lvdSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDUzIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6ODoiY2FmZTUuaW4iO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA1NCI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjc6ImNjLXouY3oiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA1NSI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjc6ImNvLW8uY28iO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA1NiI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjc6ImNyLTcuY2MiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA1NyI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjEyOiJjdXRsaW5rcy5iaXoiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA1OCI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjExOiJjdXRsaW5rcy5jYSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDU5IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTM6ImN1dGxpbmtzLm1vYmkiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA2MCI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjEyOiJjdXRsaW5rcy5vcmciO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA2MSI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjExOiJjdXR0LWx5LmNvbSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDYyIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTE6ImN1dHVybHMubmV0IjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wNjMiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo4OiJkLWV2LmRldiI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDY0IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6NjoiZmNvLnRvIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wNjUiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo2OiJmbW8uZm0iO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA2NiI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjY6ImctbC5nbCI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDY3IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6NjoiZy15Lmd5IjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wNjgiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo5OiJnb2IuY28uaWwiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA2OSI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjk6Imdvdi5jby52ZSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDcwIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTA6ImgtYWlyLmhhaXIiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA3MSI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjg6ImktYS5hc2lhIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wNzIiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo4OiJpLWN1LmljdSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDczIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6NzoiaS1pby5pbyI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDc0IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6NjoiaS1tLmltIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wNzUiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo2OiJpLXMuaXMiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA3NiI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjY6ImljeC5jeCI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDc3IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6ODoiaWQtaWQuaWQiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA3OCI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjg6ImlpLWlpLnJ1IjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wNzkiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo2OiJpbGMubGMiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA4MCI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjY6ImlzeC5zeCI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDgxIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6Njoiai1lLmplIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wODIiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo2OiJrbXgubXgiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA4MyI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjg6Imwtby5sb2FuIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wODQiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo4OiJsLW9sLmxvbCI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDg1IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6NjoibGJ6LmJ6IjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wODYiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo2OiJtLW4ubW4iO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA4NyI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjY6Im12Yy52YyI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDg4IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6Njoibi1nLm5nIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wODkiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo2OiJuLXoubnoiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA5MCI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjY6Im9iei5ieiI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDkxIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6Nzoib28tby5jbyI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDkyIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6OToib28uY29mZmVlIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wOTMiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo2OiJwc3Uuc3UiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA5NCI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjY6InFpcy5pcyI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDk1IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6NjoicXFhLnFhIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wOTYiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo2OiJzLWIuc2IiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjA5NyI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjY6InMtaS5zaSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMDk4IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6Njoicy1rLnNrIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4wOTkiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo3OiJzLXNoLnNoIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4xMDAiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoxMDoic2gtb3Auc2hvcCI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMTAxIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTI6InN5LXMuc3lzdGVtcyI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMTAyIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6NjoidC1vLnRvIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4xMDMiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czo3OiJ0LXR2LnR2IjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4xMDQiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoxMzoidGlueS11cmwubW9iaSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMTA1IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6NzoidS1tdS5tdSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMTA2IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6ODoidXhlLmx1eGUiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjEwNyI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjY6InZtcy5tcyI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMTA4IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTA6InZ2LXZpcC52aXAiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjEwOSI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjY6InZ2Zy52ZyI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMTEwIjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6ODoidy1pbi53aW4iO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjExMSI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjc6InctbWUubWUiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjExMiI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjc6InctdHcudHciO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjExMyI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjY6IndhYy5hYyI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMTE0IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MTA6Indhbi1nLndhbmciO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjExNSI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjY6IndjaS5jaSI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMTE2IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6Njoid3N0LnN0IjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4xMTciO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoxMToieG1haWwuZW1haWwiO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjExOCI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjk6Inh4LXl6Lnh5eiI7YToyOntpOjA7czoyNDoiaW5qZWN0ZWQubWFzc19kb21haW4uMTE5IjtpOjE7czoxMDoic2NyaXB0X3NyYyI7fXM6MjI6ImRlc2NyaXB0aW9uc2NyaXB0cy5jb20iO2E6Mjp7aTowO3M6MjQ6ImluamVjdGVkLm1hc3NfZG9tYWluLjEyMCI7aToxO3M6MTA6InNjcmlwdF9zcmMiO31zOjE5OiJzY3JpcHRzcGxhdGZvcm0uY29tIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4xMjEiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9czoyMToiY2xpY2thbmRhbmFseXRpY3MuY29tIjthOjI6e2k6MDtzOjI0OiJpbmplY3RlZC5tYXNzX2RvbWFpbi4xMjIiO2k6MTtzOjEwOiJzY3JpcHRfc3JjIjt9fX19' ) );
//KEEP EMPTY
//KEEP EMPTY
//KEEP EMPTY
//KEEP EMPTY



/**
 * Returns a 200 HTTP status code.
 *
 * One of the security analysts requested this option.
 *
 * @option test Returns a 200 HTTP status code and custom header.
 *
 * @author Unknown <noreply@sucuri.net>
 * @author Yorman <yorman@sucuri.net>
 * @date   Nov 23, 2017
 */
if (isset($_GET['test'])) {
    header('HTTP/1.1 200 OK');
    header('X-SUCURIDB-RAND: ' . rand(100, 999));
    exit;
}

define('CI_NAME', 0);
define('CI_ACTION', 1);
define('CI_WHITELIST', 2);

define('PCRE_DELIM', '~'); // Delimiter for PCRE regular expressions
define('POSIX_DELIM', '/'); // Delimiter for POSIX regular expressions

if (isset($_GET['dir'])) {
    $scan_dir = $_GET['dir'];
    define('QUARANTINE_FOLDER', '.' . DIRECTORY_SEPARATOR . $scan_dir . DIRECTORY_SEPARATOR . '.sucuriquarantine');
}
else{
    define('QUARANTINE_FOLDER', '.' . DIRECTORY_SEPARATOR . '.sucuriquarantine');
}

define('BACKUP_APPENDIX', '_sucuridbbackup.');
define('SUCURI_KEY', 'kduhgop32lkj');
define('BACKUP_COMMENT', "-- sucuri_backup");
define('RESUME_FILE_NAME', '.sucuridbresume.txt');
define('RESUME_RESULTS', '.sucuridbresumeresults.txt');

define('UPDATE_ERR_BACKUP_DIR', 1);
define('UPDATE_ERR_BACKUP_FILE', 2);
define('UPDATE_ERR_CHANGED', 3);
define('UPDATE_ERR_NO_PRI', 4);

if (!function_exists('get_magic_quotes_gpc')) {
    function get_magic_quotes_gpc() {
        return false;
    }
}

/**
 * Support composite primary keys.
 *
 * A column can have multiple primary keys also knows as composite keys. In
 * this case, instead of identifying an unique row through the entire table
 * using one single values, we will use a merge of all the values for all the
 * columns marked as primary keys.
 *
 * For backward compatibility reasons, we will transform any non-list of data
 * identifiers into a single-value list. This is, if ths security analyst uses
 * the old URL format to show the content of an infected table row, the data
 * coming from the URL (assuming its a single-value) will be transformed into
 * an array.
 */
define('SUPPORT_COMPOSITE_KEYS', true);

$updateErrMessages = array(
    UPDATE_ERR_BACKUP_DIR => 'Create backup dir failed',
    UPDATE_ERR_BACKUP_FILE => 'Create backup file failed',
    UPDATE_ERR_CHANGED => 'The database column was simultaneously changed by another program. Please try again',
    UPDATE_ERR_NO_PRI => 'No primary key found',
);

// If running via terminal
if (isTerminal()) {
    parse_str(implode('&', array_slice($argv, 1)), $_GET);
}

/**
 * Prevents the non-supervised execution of the cleanup script.
 *
 * The main idea of this condition is to automatically delete this and other
 * scripts that were uploaded by one of our security analysts to a customer's
 * website during a regular malware cleanup.
 *
 * If the analyst forgets to delete these files and a web crawler finds them,
 * the direct execution of the script without the required parameters will
 * trigger the deletion of the cleanup suite.
 *
 * @option srun Stop the automatic deletion of the unsupervised scripts.
 */

if (!isset($_GET['srun'])) {
    @unlink('sucuri-cleanup.php');
    @unlink('sucuri-version-check.php');
    @unlink('sucuri-wpdb-clean.php');
    @unlink('sucuri-db-cleanup.php');
    @unlink('sucuri-db-clean.php');
    @unlink('sucuri_listcleaned.php');
    @unlink('sucuri-filemanager.php');
    @unlink('sucuri-toolbox.php');
    @unlink('sucuri-toolbox-client.php');
    @unlink('sucuri-adminer.php');
    @unlink('sucuri-magento2.php');
    @unlink('sucuri_db_clean.php');
    @unlink('google936278b9bb435851.html');
    @unlink('google79c13c5605e6f406.html');
    @unlink('googlee6cb14d10ed8d0d2.html');
    @unlink('googlec55310faa35e04c1.html');
    @unlink(__FILE__);
    exit(0);
}


// Get file content and find the line with content
function findLineInFile($file, $content)
{
    $fh = @fopen($file, "r");
    if (!$fh) {
        echo "DEBUG: UNABLE TO CHECK " . escapeHtml($file) . "\n";
        return null;
    }
    while (($buffer = fgets($fh, 4096)) !== false) {
        if (strpos($buffer, $content) !== false) {
            fclose($fh);
            return $buffer;
        }
    }
    fclose($fh);
    return null;
}

if (!function_exists('file_get_contents')) { // below PHP 4.3
    function file_get_contents($fileName) {
        $fh = @fopen($fileName);
        if ($fh === false) {
            return false;
        }
        $res = fread($fh, 1048576);
        fclose($fh);
        return $res;
    }
}

define('OPT_TYPE_CONST',      1);
define('OPT_TYPE_VAR',        2);
define('OPT_TYPE_ASSOC',      4);
define('OPT_TYPE_ENV',        8);
define('OPT_TYPE_XML',       16);
define('OPT_TYPE_FIRST',     32);
define('OPT_TYPE_CONST_NUM', 64);
define('OPT_TYPE_PHPDOTENV', 128);

function getOptMatch($m, $type)
{
    return ($type & OPT_TYPE_FIRST) ? $m[0] : $m[count($m) - 1];
}

function getOption($option, $config, $type)
{
    $option = preg_quote($option);

    // String constants (WordPress) - Modified to account for @define as well - - MWRESEARCH-17426
    if (($type & OPT_TYPE_CONST) &&
        preg_match_all('@^.?\s*define\(\s*([\'"])' . $option . '\1\s*,\s*([\'"])(.*)\2\s*\)\s*;@m', $config, $m)) {
            return stripslashes(getOptMatch($m[3], $type));
    }

    // Numeric constants
    if (($type & OPT_TYPE_CONST_NUM) &&
        preg_match_all('@^\s*define\(\s*([\'"])' . $option . '\1\s*,\s*(\d*)\s*\)\s*;@m', $config, $m)) {
            return stripslashes(getOptMatch($m[2], $type));
    }

    // wp-config.php trick, see
    // http://www.wpbeginner.com/wp-tutorials/useful-wordpress-configuration-tricks-that-you-may-not-know/
    if (($type & OPT_TYPE_ENV) && preg_match('@^\s*define\(\s*([\'"])' . $option . '\1\s*,\s*\$_ENV\s*[[{]\s*' .
        '([\'"]?)DATABASE_SERVER\2\s*[}\]]\s*\)\s*;@m', $config, $m)) {
            return $_ENV['DATABASE_SERVER'];
    }

    // Variables (Joomla, WordPress prefix)
    if (($type & OPT_TYPE_VAR) &&
        preg_match_all('@^\s*(?:public|var)?\s*' . $option . '\s*=\s*(?:([\'"])(.*)\1|([0-9]+))\s*;@m', $config, $m)) {
            $str = getOptMatch($m[2], $type); // Return the string m[2] or the number m[3] if the string was not found
            return $str ? stripslashes($str) : getOptMatch($m[3], $type);
    }

    // Associative arrays (Drupal)
    if (($type & OPT_TYPE_ASSOC) &&
        preg_match_all('@(?:^|,|\()\s*([\'"])' . $option . '\1\s*=>\s*([\'"])(.*?)\2\s*[,)]@m', $config, $m)) {
            return stripslashes(getOptMatch($m[3], $type));
    }

    // Magento XML config
    if (($type & OPT_TYPE_XML) && preg_match_all('@^\s*<' . $option . '>(?:<!\[CDATA\[|\{\{)(.*)(?:}}|\]\]>)</' .
        $option . '>\s*$@m', $config, $m)) {
            return getOptMatch($m[1], $type);
    }
    
    // PHPDotEnv .env config files
    if (($type == OPT_TYPE_PHPDOTENV) && preg_match_all('@^' . $option . '[^\=]*[^\w+]*[^\s*]*@m', $config, $m)) {
            return preg_replace('@^' . $option . '[^\=]*[^\w+]*@m', "",$m[0][0]);
    }

    return '';
}


// Properly escape HTML content
function escapeHTML($string)
{
    global $isPlainText;

    if ($isPlainText) {
        return $string;
    }

    if (!defined('ENT_SUBSTITUTE')) {
        define('ENT_SUBSTITUTE', 0);
    }

    return htmlspecialchars($string, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');
}


/**
 * The nature of the code forces us to disregard the addition of unit-tests for
 * most of the implemented features. This option allows the execution of a small
 * set of tests that guarantee the functionality of some of the main actions of
 * the database cleanup script.
 *
 * @option tests Includes and executes the script test suite.
 */
if (isset($_GET['tests'])) {
    include 'sucuri-db-tests.php';
    runTests();
    exit;
}

// Find the output format
$isPlainText = false;
if (isset($_GET['robot'])) {
    $isPlainText = true;
    if (!isset($_GET['dump'])) {
        header('Content-Type: text/plain');
    }
} elseif (isTerminal()) {
    $isPlainText = true;
}

if (!isset($_GET['dump'])) {
    if (!$isPlainText) {
        echo '<style><!--
.cleared {color: green}
.warn {color: red; font-weight: bold}
.hidden-copied {position: absolute; opacity: 0; z-index: -999}
.inserted::before {content: attr(data-content)}
textarea {font-family: monospace; font-size: 100%; overflow: auto}
--></style><pre style="white-space:pre-wrap">';
    }

    printMsg("Sucuri Database Cleanup");
    $version = ' v1.3.3 - build ' . $myversion;
    if ($isPlainText) {
        echo $version;
    } else {
        // Make the version selectable to allow easy copying to Jira
        echo '<input type="text" readonly name="version" style="border:none;font-family:monospace;font-size: 100%" '.
             'size="' . (strlen($version) + 10) . '" value="' . $version . '" onclick="this.setSelectionRange(1, ' .
             strlen($version) . ')">';
    }
    printMsg("\n\n");
}

// Create sucuri_db_clean.php
if (isset($_GET['dbconfig'])) {
    doDbConfig();
}

$config = getCMSConfig();

if (null === $config) {
    doDbConfig();
}

/**
 * The mysqli extension, or as it is sometimes known, the MySQL improved
 * extension, was developed to take advantage of new features found in MySQL
 * systems versions 4.1.3 and newer. The mysqli extension is included with PHP
 * versions 5 and later. The mysqli extension has a number of benefits, the key
 * enhancements over the mysql extension being:
 *
 * Object-oriented interface
 * Support for Prepared Statements
 * Support for Multiple Statements
 * Support for Transactions
 * Enhanced debugging capabilities
 * Embedded server support
 */
if (function_exists('mysqli_connect')) {
    if (function_exists('mysqli_real_query')
        && function_exists('mysqli_use_result')
    ) {
        /*
         * If we detect the possibility, we are going to use some methods
         * that consume less memory, to avoid getting out-of-memory errors
         */
        $driver = new MySQLIDriverLowMemory();
    } else {
        $driver = new MySQLIDriver();
    }
} else {
    $driver = new MySQLDriver();
}

$errMsg = $driver->connect($config);

if ($errMsg !== true) {
    reportFatalError($errMsg);
}

if (!isset($_GET['dump'])) {
    printMsg("\nINFO: Connected to " . $driver->getName() . "\n");
}

maybePrintUserList();

// Show field/row content
if (isset($_GET['showcontent'])
    && isset($_GET['t'])
    && isset($_GET['c'])
    && isset($_GET['id_name'])
    && isset($_GET['id'])
) {
    showContent($driver, $_GET['t'], $_GET['c'], $_GET['id_name'], $_GET['id']);
}

if (isset($_GET['showcontent'])
    && isset($_GET['t'])
    && isset($_GET['id_name'])
    && isset($_GET['id'])
) {
    showRow($driver, $_GET['t'], $_GET['id_name'], $_GET['id']);
}

// Restore database
if (isset($_GET['restore'])) {
    restore($driver, $_GET['restore']);
}

// Turning off whitelists when requested
if (isset($_GET['nowhitelist'])) {
    $WHITELIST_STRINGS = array();
    $WHITELIST_TABS = array();
}


// Search all tables
$tablesColumns = $driver->getTablesColumns($config, SUPPORT_COMPOSITE_KEYS);

if (isset($_GET['dump'])) {
    $tmp_file_name = getBackupFilename('dump-tables', uniqid('dump-'));
    if ($tmp_file_name === false) {
        showUpdateDbError(UPDATE_ERR_BACKUP_FILE);
        exit;
    }
    $tmp_file = fopen($tmp_file_name, 'w+');
    dumpTables($driver, $_GET['dump'], $tablesColumns, $config['db']);
}

if (isset($_GET['resumeresults'])) {
    resumeResults();
}

readSkipTable($tablesColumns);

$foundMalware = false;

startResume();

$displayScanningComplete = false;

if (isset($_GET['s'])) {
    $displayScanningComplete = true;
    $searchSignature = getSearchSignature();
    searchAndClear($driver, $tablesColumns, $searchSignature);
    replaceInTerminal($driver, $tablesColumns, $searchSignature);
} elseif (isset($_GET['help'])) {
    printScriptUsage();
} elseif (isset($_GET['list'])) {
    listTables($driver, $tablesColumns, $config);
} elseif (isset($_GET['listTriggers'])) {
    listTriggers($driver);
} elseif (isset($_GET['procedures'])
    || isset($_GET['procedures_name'])
    || isset($_GET['procedures_delete'])
) {
    printStoredProcedures($driver);
} else {
    $displayScanningComplete = true;
    searchAndClear($driver, $tablesColumns, $DB_SIGS);
    searchAndClear($driver, $tablesColumns, $SIGS_MASSDOMAINS);
    deleteRows($driver, $tablesColumns, $config);
    checkDBUsers($driver, $tablesColumns, $config);
    checkWPDefaultUserRole($driver, $tablesColumns, $config);
    checkWPSiteURL($driver, $tablesColumns, $config);
    checkTriggers($driver);
}

checkSkippedTables();

$verdict = '';

if (!$foundMalware) {
    $verdict = '. No malware found';
} elseif (!skipCleanup()) {
    // When using noclean, it reports "Found malware to clean", so we don't suggest to copy these lines
    $verdict = '. Press Ctrl+A, then Ctrl+C to copy the report';
}

if ($displayScanningComplete) {
    printMsg("\n\nINFO: Scanning complete" . $verdict);
}

printMsg("\nTools: ");

$tools = array(
    'dbconfig',
    'list',
    's',
    'restore',
    'dump',
    '',
    'noclean',
    'noise',
    'skiptable=wp_comments,wp_commentmeta',
    'scantable=wp_posts,wp_options',
    'resume',
    'procedures',
);

foreach ($tools as $tool) {
    if ($tool === '') {
        printMsg("\n");
        continue;
    }
    printInsertedLink($tool);
    printMsg("\x20\x20");
}

prush($isPlainText ? "\n" : '</pre>');

finishResume(); // delete the resume file after all operations to ensure that we run to the end

$driver->disconnect();
exit;

// ======================================================
// DB abstraction layer

class MySQLCommon
{
    function escapeName($name)
    {
        // See https://dev.mysql.com/doc/refman/5.7/en/identifiers.html
        return '"' . str_replace('"', '""', $name) . '"';
    }

    function begin()
    {
        $this->query('SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;');
        $this->query('BEGIN;');
    }

    function commit()
    {
        $this->query('COMMIT;');
    }

    function rollback()
    {
        $this->query('ROLLBACK;');
    }

    function getTablesColumns($config, $withCompositeKeys = false)
    {
        $scannedTypes = array(
            'varchar' => 1, 'char' => 1,
            'tinytext' => 1, 'mediumtext' => 1, 'text' => 1, 'longtext' => 1,
            'binary' => 1, 'varbinary' => 1,
            'tinyblob' => 1, 'blob' => 1, 'mediumblob' => 1, 'longblob' => 1);

        // Get all tables
        $tablesResult = $this->query('SHOW FULL TABLES;');

        $allTables = array();
        while ($tablesRow = $this->fetchRow($tablesResult)) {
            $tablesRows[] = $tablesRow;
        }
        foreach ($tablesRows as $tablesRow) {
            // Report tables that does not begin with the Wordpress prefix
            $table = $tablesRow[0];
            if ($tablesRow[1] === 'SEQUENCE') { // MariaDB sequence
                continue;
            }
            if (!empty($config['prefix']) && 0 !== strncmp($table, $config['prefix'], strlen($config['prefix'])) &&
                !isset($_GET['dump'])) {
                printMsg("\nWARN: Table " . $table . ' does not start with prefix ' .
                    $config['prefix'] . ';', ' whitelists and CMS-specific rules will not work for this table');
            }

            $allTables[$table] = array();

            // Get all columns
            $columnsResult = $this->query('SHOW COLUMNS FROM ' . $this->escapeName($table) . ';', true);
            if ($columnsResult === false) {
                printMsg("\nWARN: Failed to list columns for " . $table);
                continue;
            }
            $uniqueString = null;
            $compositePrimary = false;
            $compositeKeys = array();
            while ($columnsRow = $this->fetchAssoc($columnsResult)) {
                $type = $columnsRow['Type'];
                $pos = strpos($type, "(");
                if ($pos !== false) {
                    $type = substr($type, 0, $pos);
                }

                if (strtoupper($columnsRow['Key']) === 'PRI') {
                    if (isset($allTables[$table]['idname'])) {
                        $compositePrimary = true;
                    }

                    if ($withCompositeKeys) {
                        $compositeKeys[] = $columnsRow['Field'];
                    }

                    $allTables[$table]['idname'] = $columnsRow['Field'];
                }

                $type = strtolower(trim($type));
                if (!isset($scannedTypes[$type])) {
                    continue;
                }

                // Prefer unique string keys to display wp_options.option_name instead of the numeric ID
                if (strtoupper($columnsRow['Key']) === 'UNI') {
                    $uniqueString = $columnsRow['Field'];
                }

                $allTables[$table][] = $columnsRow['Field'];
            }

            if ($uniqueString !== null) {
                $allTables[$table]['idname'] = $uniqueString;
            } elseif ($withCompositeKeys && count($compositeKeys) > 1) {
                /* return idname as an array of primary keys */
                $allTables[$table]['idname'] = $compositeKeys[0];

                //patch to attempt to fix composite keys index in drupal table field_data_body and others
                if($allTables[$table]['idname'] == 'entity_type'){
                    $allTables[$table]['idname'] = 'entity_id';
                }
            } elseif ($compositePrimary) { // Disable the cleanup for composite primary keys and no primary key
                unset($allTables[$table]['idname']);
            }
        }
        return $allTables;
    }

    function getColumnNamesTypes($table)
    {
        $columnsResult = $this->query('SHOW COLUMNS FROM ' . $this->escapeName($table) . ';');

        $binaryTypes = array('binary' => 1, 'varbinary' => 1,
            'tinyblob' => 1, 'blob' => 1, 'mediumblob' => 1, 'longblob' => 1);

        $numericTypes = array('tinyint' => 1, 'smallint' => 1, 'mediumint' => 1,
            'int' => 1, 'integer' => 1, 'bigint' => 1,
            'decimal' => 1, 'dec' => 1, 'numeric' => 1, 'fixed' => 1,
            'float' => 1, 'real' => 1, 'double' => 1, 'double precision' => 1);

        $names = array();
        $types = array();

        while ($columnsRow = $this->fetchAssoc($columnsResult)) {
            $names[] = $columnsRow['Field'];

            $type = $columnsRow['Type'];
            $pos = strpos($type, "(");
            if ($pos !== false) {
                $type = substr($type, 0, $pos);
            }
            $type = strtolower(trim($type));

            if (isset($numericTypes[$type])) {
                $types[] = 'num';
            } elseif (isset($binaryTypes[$type])) {
                $types[] = 'bin';
            } elseif ($type === 'bit') {
                $types[] = 'bit';
            } else {
                $types[] = 'other';
            }
        }

        return array($names, $types);
    }

    function exportRow($row, $types)
    {
        for ($i = 0; $i < count($row); $i++) {
            if ($row[$i] === null) {
                $row[$i] = 'NULL';
            } elseif ($types[$i] === 'bin') {
                // Story binary data as hex to avoid encoding problems
                $row[$i] = 'UNHEX(' . $this->escapeStr(bin2hex($row[$i])) . ')';
            } elseif ($types[$i] === 'bit') {
                // TODO: tests under PHP 4
                // See https://stackoverflow.com/questions/15106985/
                $row[$i] = "b'" . decbin($row[$i]) . "'";
            } elseif ($types[$i] === 'num') {
                $row[$i] = (string)$row[$i];
            } else {
                $row[$i] = $this->escapeStr($row[$i]);
            }
        }
        return implode(', ', $row);
    }

    function getCreateTableSql($table)
    {
        $res = $this->query('SHOW CREATE TABLE ' . $this->escapeName($table) . ';');
        $row = $this->fetchRow($res);

        if (!$row) {
            exit('Unexpected empty result from SHOW CREATE TABLE');
        }

        return $row[1] . ";\n\n";
    }

    function getCreateDBSql($db)
    {
        $res = $this->query('SHOW CREATE DATABASE ' . $this->escapeName($db) . ';');
        $row = $this->fetchRow($res);

        if (!$row) {
            exit('Unexpected empty result from SHOW CREATE DATABASE');
        }

        return $row[1] . ";\nUSE " . $this->escapeName($db) . ";\n\n";
    }

    function getDumpHeader()
    {
        return
            "SET NAMES 'utf8';\n" .
            "SET sql_mode='NO_AUTO_VALUE_ON_ZERO,ANSI_QUOTES,STRICT_TRANS_TABLES';\n" .
            "SET foreign_key_checks=0;\n";
    }

    function setModes()
    {
        $this->query("SET NAMES 'utf8';");
        $this->query("SET sql_mode='PIPES_AS_CONCAT,IGNORE_SPACE," .
            "NO_AUTO_VALUE_ON_ZERO,ANSI_QUOTES,STRICT_TRANS_TABLES';");
    }

    function queryLowMemory($sql, $forceResReturn = false)
    {
        return $this->query($sql, $forceResReturn);
    }
}

class MySQLDriver extends MySQLCommon
{
    var $link;

    function connect($config)
    {
        // Connect to DB
        $host = $config['host'];
        if (isset($config['port'])) {
            $host .= ':' . $config['port'];
        }
        $this->link = @mysql_connect($host, $config['user'], $config['pass']);
        if ($this->link === false) {
            return 'Could not connect to MySQL database: ' . mysql_error();
        }

        mysql_select_db($config['db'], $this->link);

        $this->setModes();
        return true;
    }

    function disconnect()
    {
        mysql_close($this->link);
    }

    function escapeStr($str)
    {
        return "'" . mysql_real_escape_string($str, $this->link) . "'";
    }

    function query($sql, $forceResReturn = false)
    {
        global $isPlainText;
        $res = mysql_query($sql, $this->link);
        if (!$res) {
            if ($forceResReturn === true) {
                return $res;
            }

            $error = mysql_error($this->link);
            if (!$isPlainText) {
                $error = '<b>' . escapeHtml($error) . '</b>';
            }
            echo "\n" . escapeHtml(substr($sql, 0, 100)) . ' -- ' . $error . "\n";
            exit(1);
        }
        return $res;
    }

    function fetchAssoc($res)
    {
        $row = mysql_fetch_assoc($res);
        if (false === $row) {
            mysql_free_result($res);
        }
        return $row;
    }

    function fetchRow($res)
    {
        $row = mysql_fetch_row($res);
        if (false === $row) {
            mysql_free_result($res);
        }
        return $row;
    }

    function getAffectedRows()
    {
        return mysql_affected_rows($this->link);
    }

    function getName()
    {
        return 'MySQL database';
    }
}

class MySQLIDriver extends MySQLCommon
{
    var $link;

    function connect($config)
    {
        // Connect to DB
        $port = isset($config['port']) ? $config['port'] : null;
        $this->link = @mysqli_connect($config['host'], $config['user'], $config['pass'], $config['db'], $port);
        if ($this->link === false) {
            return 'Could not connect to MySQLi database: ' . mysqli_connect_error();
        }

        $this->setModes();
        return true;
    }

    function disconnect()
    {
        mysqli_close($this->link);
    }

    function escapeStr($str)
    {
        return "'" . mysqli_real_escape_string($this->link, $str) . "'";
    }

    function query($sql, $forceResReturn = false)
    {
        global $isPlainText;
        $res = mysqli_query($this->link, $sql);
        if (!$res) {
            if ($forceResReturn === true) {
                return $res;
            }

            $error = mysqli_error($this->link);
            if (!$isPlainText) {
                $error = '<b>' . escapeHtml($error) . '</b>';
            }

            echo "\n" . escapeHtml(substr($sql, 0, 100)) . ' -- ' . $error . "\n";
            exit(1);
        }
        return $res;
    }

    function fetchAssoc($res)
    {
        $row = mysqli_fetch_assoc($res);
        if (false === $row) {
            mysqli_free_result($res);
        }
        return $row;
    }

    function fetchRow($res)
    {
        $row = mysqli_fetch_row($res);
        if (false === $row) {
            mysqli_free_result($res);
        }
        return $row;
    }

    function getAffectedRows()
    {
        return mysqli_affected_rows($this->link);
    }

    function getName()
    {
        return 'MySQLi database';
    }
}

/**
 * Class MySQLIDriverLowMemory
 *
 * This object consumes less memory when querying the database, but
 * be aware that you cannot keep results in memory without using
 * them first in a loop or cleaning them with mysqli_free_result
 *
 */
class MySQLIDriverLowMemory extends MySQLIDriver
{

    function queryLowMemory($sql, $forceResReturn = false)
    {
        global $isPlainText;
        mysqli_store_result($this->link);
        if ($forceResReturn) {
            $res = mysqli_query($this->link, $sql);
        } else {
            mysqli_real_query($this->link, $sql);
            $res = mysqli_use_result($this->link);
        }

        if (!$res) {
            if ($forceResReturn === true) {
                return $res;
            }

            $error = mysqli_error($this->link);
            if ($error !== '') {
                if (!$isPlainText) {
                    $error = '<b>' . escapeHtml($error) . '</b>';
                }

                echo "\n" . escapeHtml(substr($sql, 0, 100)) . ' -- ' . $error . "\n";
                exit(1);
            }
        }
        return $res;
    }
}

// ======================================================
// Read CMS configuration

/**
 * Returns the credentials to connect to a WordPress database.
 *
 * @param  string $lines Content of the configuration file.
 * @return array         Credentials to connect to the database.
 */
function readWordPressConfig($lines)
{
    return array(
        'host' => getOption('DB_HOST', $lines, OPT_TYPE_CONST | OPT_TYPE_ENV),
        'user' => getOption('DB_USER', $lines, OPT_TYPE_CONST),
        'pass' => getOption('DB_PASSWORD', $lines, OPT_TYPE_CONST),
        'db' => getOption('DB_NAME', $lines, OPT_TYPE_CONST),
        'prefix' => getOption('$table_prefix', $lines, OPT_TYPE_VAR),
    );
}

/**
 * Returns the credentials to connect to a Magento1 database.
 *
 * @param  string $lines Content of the configuration file.
 * @return array         Credentials to connect to the database.
 */
function readMagento1Config($lines)
{
    return array(
        'host' => getOption('host', $lines, OPT_TYPE_XML),
        'user' => getOption('username', $lines, OPT_TYPE_XML),
        'pass' => getOption('password', $lines, OPT_TYPE_XML),
        'db' => getOption('dbname', $lines, OPT_TYPE_XML),
        'prefix' => getOption('table_prefix', $lines, OPT_TYPE_XML),
    );
}

/**
 * Returns the credentials to connect to a Magento2 database.
 *
 * @param  string $lines Content of the configuration file.
 * @return array         Credentials to connect to the database.
 */
function readMagento2Config($lines)
{
    return array(
        'host' => getOption('host', $lines, OPT_TYPE_ASSOC),
        'user' => getOption('username', $lines, OPT_TYPE_ASSOC),
        'pass' => getOption('password', $lines, OPT_TYPE_ASSOC),
        'db' => getOption('dbname', $lines, OPT_TYPE_ASSOC),
        'prefix' => getOption('table_prefix', $lines, OPT_TYPE_ASSOC),
    );
}

/**
 * Returns the credentials to connect to a Drupal database.
 *
 * @param  string $lines Content of the configuration file.
 * @return array         Credentials to connect to the database.
 */
function readDrupalConfig($lines)
{
    return array(
       'host' => getOption('host', $lines, OPT_TYPE_ASSOC | OPT_TYPE_FIRST),
       'user' => getOption('username', $lines, OPT_TYPE_ASSOC | OPT_TYPE_FIRST),
       'pass' => getOption('password', $lines, OPT_TYPE_ASSOC | OPT_TYPE_FIRST),
       'db' => getOption('database', $lines, OPT_TYPE_ASSOC | OPT_TYPE_FIRST),
       'prefix' => getOption('prefix', $lines, OPT_TYPE_ASSOC | OPT_TYPE_FIRST),
    );
}

/**
 * Returns the credentials to connect to a Joomla database.
 *
 * @param  string $lines Content of the configuration file.
 * @return array         Credentials to connect to the database.
 */
function readJoomlaConfig($lines)
{
    return array(
        'host'   => getOption('$host', $lines, OPT_TYPE_VAR),
        'user'   => getOption('$user', $lines, OPT_TYPE_VAR),
        'pass'   => getOption('$password', $lines, OPT_TYPE_VAR),
        'db'     => getOption('$db', $lines, OPT_TYPE_VAR),
        'prefix' => getOption('$dbprefix', $lines, OPT_TYPE_VAR),
    );
}

/**
 * Returns the credentials to connect to a Vbulletin database.
 *
 * @param  string $lines Content of the configuration file.
 * @return array         Credentials to connect to the database.
 */
function readVbulletinConfig($lines)
{
    // https://www.vbulletin.com/docs/html/main/install_core_config_php
    return array(
        'host' => getOption("\$config['MasterServer']['servername']", $lines, OPT_TYPE_VAR),
        'user' => getOption("\$config['MasterServer']['username']", $lines, OPT_TYPE_VAR),
        'pass' => getOption("\$config['MasterServer']['password']", $lines, OPT_TYPE_VAR),
        'db' => getOption("\$config['Database']['dbname']", $lines, OPT_TYPE_VAR),
        'port' => getOption("\$config['MasterServer']['port']", $lines, OPT_TYPE_VAR),
        'prefix' => getOption("\$config['Database']['tableprefix']", $lines, OPT_TYPE_VAR),
    );
}

/**
 * Returns the credentials to connect to a PrestaShop database.
 *
 * @param  string $lines Content of the configuration file.
 * @return array         Credentials to connect to the database.
 */
function readPrestaShopConfig($lines)
{
    $lines = explode("\n", $lines);
    $dbconfig = array();

    foreach ($lines as $line) {
        preg_match('/^[^#]\s+([\'"])(.*)\1\s+=>\s+([\'"])(.*)\3/', $line, $matches);
        $key   = isset($matches[2]) ? $matches[2] : null;
        $value = isset($matches[4]) ? $matches[4] : null;

        if (isset($key) && isset($value)) {
            $dbconfig[$key] = $value;
        }
    }

    $admin_profile_config = '.' . DIRECTORY_SEPARATOR . 'config' . DIRECTORY_SEPARATOR . 'defines.inc.php';
    $apc_lines = file_get_contents($admin_profile_config);
    $admin_profile_num = getOption('_PS_ADMIN_PROFILE_', $apc_lines, OPT_TYPE_CONST_NUM);

    return array(
        'host'     => $dbconfig['database_host'],
        'user'     => $dbconfig['database_user'],
        'pass'     => $dbconfig['database_password'],
        'db'       => $dbconfig['database_name'],
        'prefix'   => $dbconfig['database_prefix'],
        'admin_id' => $admin_profile_num,
    );
}

/**
 * Returns the credentials to connect to a PrestaShop database (versions 1.6 and lower).
 *
 * @param  string $lines Content of the configuration file.
 * @return array         Credentials to connect to the database.
 */
function readPrestaShopConfigOld($lines)
{
    if (is_array($lines)) {
        $lines = implode("\n", $lines);
    }

    $admin_profile_config = '.' . DIRECTORY_SEPARATOR . 'config' . DIRECTORY_SEPARATOR . 'defines.inc.php';
    $apc_lines = file_get_contents($admin_profile_config);
    $admin_profile_num = getOption('_PS_ADMIN_PROFILE_', $apc_lines, OPT_TYPE_CONST_NUM);

    return array(
        'host'     => getOption('_DB_SERVER_', $lines, OPT_TYPE_CONST | OPT_TYPE_ENV),
        'user'     => getOption('_DB_USER_', $lines, OPT_TYPE_CONST),
        'pass'     => getOption('_DB_PASSWD_', $lines, OPT_TYPE_CONST),
        'db'       => getOption('_DB_NAME_', $lines, OPT_TYPE_CONST),
        'prefix'   => getOption('_DB_PREFIX_', $lines, OPT_TYPE_CONST),
        'admin_id' => $admin_profile_num,
        'old'      => true,
    );
}

/**
 * Returns the credentials to connect to a OsCommerce database.
 *
 * @param  string $lines Content of the configuration file.
 * @return array         Credentials to connect to the database.
 */
function readOsCommerceConfig($lines)
{
    return array(
        'host' => getOption('DB_SERVER', $lines, OPT_TYPE_CONST | OPT_TYPE_ENV),
        'user' => getOption('DB_SERVER_USERNAME', $lines, OPT_TYPE_CONST),
        'pass' => getOption('DB_SERVER_PASSWORD', $lines, OPT_TYPE_CONST),
        'db' => getOption('DB_DATABASE', $lines, OPT_TYPE_CONST),
        'prefix' => getOption('DB_PREFIX', $lines, OPT_TYPE_CONST),
    );
}

/**
 * Returns the credentials to connect to a MODX database.
 *
 * @param  string $lines Content of the configuration file.
 * @return array         Credentials to connect to the database.
 */
function readMODXConfig($lines)
{
    return array(
        'host' => getOption('$database_server', $lines, OPT_TYPE_VAR),
        'user' => getOption('$database_user', $lines, OPT_TYPE_VAR),
        'pass' => getOption('$database_password', $lines, OPT_TYPE_VAR),
        'db' => getOption('$dbase', $lines, OPT_TYPE_VAR),
        'prefix' => getOption('$table_prefix', $lines, OPT_TYPE_VAR),
    );
}

/**
 * Returns the credentials to connect to a OpenCart database.
 *
 * @param  string $lines Content of the configuration file.
 * @return array         Credentials to connect to the database.
 */
function readOpenCartConfig($lines)
{
    return array(
        'host' => getOption('DB_HOSTNAME', $lines, OPT_TYPE_CONST | OPT_TYPE_ENV),
        'user' => getOption('DB_USERNAME', $lines, OPT_TYPE_CONST),
        'pass' => getOption('DB_PASSWORD', $lines, OPT_TYPE_CONST),
        'db' => getOption('DB_DATABASE', $lines, OPT_TYPE_CONST),
        'prefix' => getOption('DB_PREFIX', $lines, OPT_TYPE_CONST),
    );
}

/**
 * Returns the credentials to connect to a PhpBB database.
 *
 * @param  string $lines Content of the configuration file.
 * @return array         Credentials to connect to the database.
 */
function readPhpBBConfig($lines)
{
    return array(
        'host' => getOption('$dbhost', $lines, OPT_TYPE_VAR),
        'user' => getOption('$dbuser', $lines, OPT_TYPE_VAR),
        'pass' => getOption('$dbpasswd', $lines, OPT_TYPE_VAR),
        'db' => getOption('$dbname', $lines, OPT_TYPE_VAR),
        'prefix' => getOption('$table_prefix', $lines, OPT_TYPE_VAR),
    );
}

/**
 * Returns the credentials to connect to a Laravel/Symfony database.
 *
 * @param  string $lines Content of the configuration file.
 * @return array         Credentials to connect to the database.
 */
function readSymfLaravelConfig($lines)
{
    return array(
        'host' => getOption('DB_HOST', $lines, OPT_TYPE_PHPDOTENV),
        'user' => getOption('DB_USERNAME', $lines, OPT_TYPE_PHPDOTENV),
        'pass' => getOption('DB_PASSWORD', $lines, OPT_TYPE_PHPDOTENV),
        'db' => getOption('DB_NAME', $lines, OPT_TYPE_PHPDOTENV),
        'prefix' => '',
    );
}

/**
 * Returns the website configuration.
 *
 * @param  string $dir Directory where the website is installed.
 * @return array|bool  Website configuration or false on failure.
 */
function getCMSConfigInDir($dir)
{
    global $config;
    $cmses = array(
        'sucuri_db_clean.php'            => array( 'sucuri_db_clean.php', 'readWordPressConfig' ),
        'wp-config.php'                  => array( 'WordPress', 'readWordPressConfig' ),
        'configuration.php'              => array( 'Joomla', 'readJoomlaConfig' ),
        'sites/default/settings.php'     => array( 'Drupal', 'readDrupalConfig' ),
        'app/etc/local.xml'              => array( 'Magento1', 'readMagento1Config' ),
        'app/etc/env.php'                => array( 'Magento2', 'readMagento2Config' ),
        'includes/config.php'            => array( 'vBulletin', 'readVbulletinConfig' ), // vBulletin 4
        'core/includes/config.php'       => array( 'vBulletin', 'readVbulletinConfig' ), // vBulletin 5 and higher
        'config/settings.inc.php'        => array( 'PrestaShop', 'readPrestaShopConfigOld' ), // Older prestashop
        'app/config/parameters.php'      => array( 'PrestaShop', 'readPrestaShopConfig' ),
        'includes/configure.php'         => array( 'osCommerce', 'readOsCommerceConfig' ),
        'core/config/config.inc.php'     => array( 'MODX', 'readMODXConfig' ),
        'admin/config.php'               => array( 'OpenCart', 'readOpenCartConfig' ),
        'config.php'                     => array( 'phpBB', 'readPhpBBConfig' ),
        '.env'                           => array( 'laravel/Symfony', 'readSymfLaravelConfig' ),
    );

    if (isset($_GET['noise'])) {
        printMsg("Checking config in " . $dir . "\n");
    }

    // Detect the CMS
    foreach ($cmses as $filename => $cmsArray) {
        if (!is_readable($dir . $filename)) {
            continue;
        }

        list($cmsName, $configFunc) = $cmsArray;

        $config = call_user_func($configFunc, file_get_contents($dir . $filename));

        // At least these parameters must be present in the config file;
        // the prefix, the port number, and the password can be empty
        if ($config['host'] && $config['db'] && $config['user']) {
            $config['cms'] = $cmsName;

            if (preg_match('/:([0-9]+)$/', $config['host'], $matches)) {
                $config['host'] = substr($config['host'], 0, -strlen($matches[0]));
                $config['port'] = $matches[1];
            }

            if (!isset($_GET['dump'])) {
                printMsg($cmsName . " detected. Config file: $dir$filename");
                if (!$GLOBALS['isPlainText']) {
                    echo('  <a href="sucuri-cleanup.php?srun&new&seefile=' . base64_encode($dir . $filename) . '" target="_blank">' .
                        '<span class="inserted" data-content="show content"></span></a>');
                }
            }


            return $config;
        } else {
            printMsg("INFO: not found DB config in $dir$filename\n");
        }
    }

    return false;
}

/**
 * Returns the website configuration.
 *
 * The function searches for the configuration file in the current directory,
 * then the parent directory, then in every directory that is under the current
 * location. Once it finds it, it immediately returns the information contained
 * in the file.
 *
 * @return array|bool|null Website configuration or false on failure.
 */
function getCMSConfig()
{
    if (isset($_GET['dir'])) {
        $scan_dir = $_GET['dir'];
        $config = getCMSConfigInDir($scan_dir . DIRECTORY_SEPARATOR);
        return $config;
    }
    else{
        // Check . and .. first because readdir() can return them after the other directories
        $config = getCMSConfigInDir('.' . DIRECTORY_SEPARATOR);
        if ($config) {
            return $config;
        }

        $config = getCMSConfigInDir('..' . DIRECTORY_SEPARATOR);
        if ($config) {
            return $config;
        }

        $dh = opendir('.');
        if (!$dh) {
            return null;
        }

        while (false !== ($fileName = @readdir($dh))) {
            if (!is_dir($fileName) || $fileName === '.' || $fileName === '..') {
                continue;
            }

            $config = getCMSConfigInDir($fileName . DIRECTORY_SEPARATOR);
            if ($config) {
                closedir($dh);
                return $config;
            }
        }
        closedir($dh);

        echo "ERROR: Unable to complete. Missing config file\n\n";
        return null;
    }
}

/**
 * Creates a file with the website configuration.
 *
 * If the script is not able to find the file with the website configuration,
 * this function can be used to create a temporary file that will be used to
 * expose the necessary data in order to connect to the database and proceed
 * with the rest of the operations.
 *
 * @param  array $config Website configuration.
 * @return void
 */
function createConfigFile($config)
{
    $contents = "<?php

define( 'DB_NAME', '" . addslashes($config['dbname']) . "' );
define( 'DB_USER', '" . addslashes($config['dbuser']) . "' );
define( 'DB_PASSWORD', '" . addslashes($config['dbpass']) . "' );
define( 'DB_HOST', '" . addslashes($config['dbhost']) . "' );

\$table_prefix = '" . addslashes($config['prefix']) . "';
\$cms = '" . addslashes($config['cms']) . "';

";

    $fh = fopen('sucuri_db_clean.php', 'wb');
    if ($fh === false || false === fwrite($fh, $contents)) {
        reportFatalError('Unable to store file: sucuri_db_clean.php');
    }
    fclose($fh);

    echo "Successfully stored file: sucuri_db_clean.php\n";
}

/**
 * Prints a message into the command line and waits for user input.
 *
 * @param  string $prompt  Text to act as the command line prompt.
 * @param  string $default Default value in case of no user input.
 * @return string          User input.
 */
function askFromCmdLine($prompt, $default = '')
{
    if ($default) {
        echo $prompt . ' (press Enter for ' . $default . '): ';
    } else {
        echo $prompt . ': ';
    }

    $ret = trim(fgets(STDIN));

    if ($ret === '') {
        return $default;
    }

    return $ret;
}

/**
 * Displays a form to create a custom configuration file.
 *
 * If the script is executed over a web interface, the script will print a form
 * with fields asking for the information that will be used to connect with the
 * database associated to the website. However, if the script is being executed
 * over a command line interface, the script will ask for the same information
 * using command prompts.
 *
 * @return void
 */
function doDbConfig()
{
    if (isTerminal()) {
        $config = array();
        $config['dbname'] = askFromCmdLine('Database name');
        $config['dbuser'] = askFromCmdLine('Username', $config['dbname']);
        $config['dbpass'] = askFromCmdLine('Password');
        $config['dbhost'] = askFromCmdLine('Host', '127.0.0.1');

        $cmses = array('WordPress' => 1, 'Joomla' => 1, 'Magento' => 1, 'vBulletin' => 1, 'Drupal' => 1);
        do {
            $config['cms'] = askFromCmdLine('CMS (one of WordPress, Joomla, Magento, vBulletin, or Drupal)', 'WordPress');
        } while (!isset($cmses[$config['cms']]));

        if ($config['cms'] === 'WordPress') {
            $defaultPrefix = 'wp_';
        } elseif ($config['cms'] === 'Magento') {
            $defaultPrefix = 'mg_';
        } else {
            $defaultPrefix = '';
        }

        $config['prefix'] = askFromCmdLine('Prefix', $defaultPrefix);

        createConfigFile($config);
        return;
    }

    if (isset($_POST['createconfig'])) {
        if (!isset($_POST['dbname'])
            || !isset($_POST['dbuser'])
            || !isset($_POST['dbpass'])
            || !isset($_POST['dbhost'])
            || !isset($_POST['prefix'])
        ) {
            reportFatalError('No DB params');
        }

        if (get_magic_quotes_gpc()) {
            $_POST['dbname'] = stripslashes($_POST['dbname']);
            $_POST['dbuser'] = stripslashes($_POST['dbuser']);
            $_POST['dbpass'] = stripslashes($_POST['dbpass']);
            $_POST['dbhost'] = stripslashes($_POST['dbhost']);
            $_POST['prefix'] = stripslashes($_POST['prefix']);
        }

        createConfigFile($_POST);
        echo '<a href="?srun">Scan the database</a>';
        exit;
    }

    echo "Setup sucuri_db_clean.php with custom DB credentials (WARNING: THIS WILL OVERRIDE ANY CURRENT FILE):\n";
    echo '<form method="post" action="">';
    echo '<scr' . 'ipt type="text/javascript"><!--' . "\n";
    echo 'function onChangeCms() {' . "\n";
    echo 'var prefix = ["wp_", "", "mg_", "", ""];' . "\n";
    echo 'document.getElementById("prefix").value = prefix[document.getElementById("cms").selectedIndex];' . "\n";
    echo "}\n";
    echo '--></script>';

    echo '<input type="hidden" name="createconfig" value="myconfig" />';

    echo "Database:\t" . '<input type="text" name="dbname" value="">' . "\n";
    echo "Username:\t" . '<input type="text" name="dbuser" value="">' . "\n";
    echo "Password:\t" . '<input type="text" name="dbpass" value="">' . "\n";
    echo "Host:\t\t" . '<input type="text" name="dbhost" value="localhost">' . "\n";
    echo "CMS:\t\t" . '<select name="cms" id="cms" onchange="onChangeCms()">' .
        '<option selected>WordPress</option><option>Joomla</option>' .
        '<option>Magento</option><option>vBulletin</option><option>Drupal</option></select>' . "\n";
    echo "Prefix:\t\t" . '<input type="text" name="prefix" id="prefix" value="wp_">' . "\n";
    echo '<input type="submit" name="submit" value="Save file" />';

    echo '</form>';

    exit;
}

/**
 * Allows to edit a database column manually.
 *
 * This function renders a HTML form that allows to edit the content of one or
 * more rows in a specific table in the database. The form sends old_content and
 * row_content which are used to search and replace the content of a table.
 *
 * @param  MySQLIDriver $driver Database connection.
 * @param  string       $table  Name of the table.
 * @param  string       $column Name of the column.
 * @param  string       $idName Name of the primary key column.
 * @param  array        $id     List of identifiers for the primary key column.
 * @return void
 */
function showContent($driver, $table = '', $column = '', $idName = '', $id = array())
{
    $location = array('table' => $table, 'column' => $column, 'idname' => $idName, 'id' => $id);
    $updateRes = false;

    if (isset($_POST['row_content']) && isset($_POST['old_content'])) {
        if (get_magic_quotes_gpc()) {
            $_POST['row_content'] = stripslashes($_POST['row_content']);
        }

        $old_content = base64_decode($_POST['old_content']);
        $updateRes = updateDb($driver, $_POST['row_content'], $old_content, $location, 'manual');
    }

    $sqlContent = 'SELECT ' . $driver->escapeName($column) . ' FROM ' . $driver->escapeName($table) .
        ' WHERE ' . $driver->escapeName($idName) . ' = ' . $driver->escapeStr($id) . ';';

    $row = $driver->fetchRow($driver->query($sqlContent));

    $dir = '';
    if (isset($_GET['dir'])) {
        $dir = '&dir=' . $_GET['dir'];
    }
    // Exclude match_start/match_end from the link: after editing, there should be no selection
    $link = '?srun&showcontent&t=' . escapeHTML($table) . '&c=' . escapeHTML($column) .
            '&id_name=' . escapeHTML($idName) . '&id=' . escapeHTML($id) . $dir;
    echo '<form method="post" action="' . $link . '">';
    echo '<input type="hidden" name="old_content" value="' . base64_encode($row[0]) . '">';

    echo getLocationHTML($location, 'plaintext');
    $compoundRe = '/^ (?:
          a : (?P<count> [0-9]+) : \\{
        | (?P<type> [OC]) : (?P<namelen> [0-9]+) : "(?P<name> [^"]+)" : (?P<clen> [0-9]+) : \\{
        ) /x';

    if (preg_match($compoundRe, $row[0])) {
        echo ' - THIS STRING IS SERIALIZED! Please use <a href="?srun&s"><b>search and replace</b></a> instead!';
    } else {
        echo ' - <input type="submit" name="submit" value="Update Content" />';
    }

    echo '<div style="float:right"><a href="?srun&s">Global search and replace</a></div>';

    showUpdateDbError($updateRes);
    if ($updateRes === true) {
        echo "\n" . '<span class="cleared">Updated</span>';
    }

    echo "\n\n" . '<textarea id="row_content" name="row_content" style="margin: 2px; height: 85%; width: 100%">';

    echo escapeHTML($row[0]);

    echo "</textarea></form>";

    if (isset($_GET['match_start']) && isset($_GET['match_end'])) {
        // Highlight the matching text
        $match_start = intval($_GET['match_start']);
        $match_end = intval($_GET['match_end']);

        echo '<scr' . 'ipt type="text/javascript"><!--' . "\n";
        echo 'document.getElementById("row_content").setSelectionRange(' . $match_start . ',' . $match_end . ');';
        echo 'document.getElementById("row_content").focus();';
        echo "\n--></script>";
    }

    $driver->disconnect();
    exit;
}

function showRow($driver, $table, $idName, $id)
{
    $location = array('table' => $table, 'idname' => $idName, 'id' => $id);
    $updateRes = false;

    if (isset($_POST['delete_row'])) {
        list($res, $out) = deleteRowsFromDb($driver, $location, $driver->escapeName($idName) . ' = ' . $driver->escapeStr($id));
        showUpdateDbError($res);
        echo $out;
        $driver->disconnect();
        exit;
    }

    list($columns, $types) = $driver->getColumnNamesTypes($location['table']);

    $sqlContent = 'SELECT * FROM ' . $driver->escapeName($table) .
        ' WHERE ' . $driver->escapeName($idName) . ' = ' . $driver->escapeStr($id) . ';';

    $row = $driver->fetchRow($driver->query($sqlContent));

    echo '<h2>' . escapeHTML($table) . '</h2>';
    echo '<table border="1" cellpadding="4" cellspacing="0"><tr>';
    for ($i = 0; $i < count($columns); $i++) {
        echo '<td>' . escapeHTML($columns[$i]) . '</td>';
    }
    echo '</tr><tr>';
    for ($i = 0; $i < count($columns); $i++) {
        echo '<td>' . escapeHTML($row[$i]) . '</td>';
    }
    echo '</tr></table>';

    echo '<br><form method="post"><input type="submit" name="delete_row" value="Delete this row" /></form>';

    $driver->disconnect();
    exit;
}

/**
 * Detects the CMS type and prints a list of admin users from the database.
 *
 * @option skip-listusers Skips the execution of the database user list printer.
 *
 * @return void
 */
function maybePrintUserList()
{
    global $config;
    if (isset($_GET['skip-listusers'])
        || isset($_GET['s'])
        || isset($_GET['dump'])
        || isset($_GET['restore'])
        || isset($_GET['showcontent'])
    ) {
        return;
    }

    printMsg("\n\nList of Administrator users:\n");

    switch ($config['cms']) {
        case 'WordPress':
            listUsersFromWordpress();
            break;

        case 'Joomla':
            listUsersFromJoomla();
            break;

        case 'Drupal':
            listUsersFromDrupal($dir . DIRECTORY_SEPARATOR . $filename);
            break;

        case 'Magento1':
        case 'Magento2':
            listUsersFromMagento(realpath(dirname(__FILE__)) . DIRECTORY_SEPARATOR . 'app' . DIRECTORY_SEPARATOR . 'Mage.php');
            break;

        case 'vBulletin':
            listUsersFromVbulletin($dir . DIRECTORY_SEPARATOR . $filename);
            break;

        case 'PrestaShop':
            listUsersFromPrestashop();
            break;

        case 'osCommerce':
            listUsersFromOscommerce($dir . DIRECTORY_SEPARATOR . $filename);
            break;

        case 'MODX':
            listUsersFromModx($dir . DIRECTORY_SEPARATOR . $filename);
            break;

        case 'OpenCart':
            listUsersFromOpencart($dir . DIRECTORY_SEPARATOR . $filename);
            break;

        case 'phpBB':
            listUsersFromPhpbb($dir . DIRECTORY_SEPARATOR . $filename);
            break;
    }
}

/**
 * Prints a list of admin users from a WordPress website.
 *
 * @return void
 */
function listUsersFromWordpress()
{
    global $config, $driver;
    $sqlContent = "SELECT " . $config['prefix'] . "users.*
                   FROM " . $config['prefix'] . "users
                   INNER JOIN " . $config['prefix'] . "usermeta ON ( " . $config['prefix'] . "users.ID = " . $config['prefix'] . "usermeta.user_id )
                   WHERE 1=1
                   AND ( ( ( " . $config['prefix'] . "usermeta.meta_key = '" . $config['prefix'] . "capabilities'
                   AND " . $config['prefix'] . "usermeta.meta_value LIKE '%\"Administrator\"%' ) ) )
                   ORDER BY ID ASC";

    $result = $driver->query($sqlContent);
    $users = array();

    $users = array();
    while ($row = $result->fetch_array()) {
        $users[] = $row;
    }


    $usersPosts = array();

    if (isset($_GET["count_user_posts"])) {
      $usersIDs = "";
      $totalUsers = count($users);
      for ($i = 0; $i < $totalUsers; $i++) {
        $usersIDs .= " OR u.ID = " . $users[$i]["ID"];
      }

      $sqlCountUsersPosts = "SELECT u.ID, COUNT(p.post_author) AS count " .
                        "FROM " . $config['prefix'] . "users AS u " .
                        "LEFT JOIN " . $config['prefix'] . "posts AS p ON u.ID = p.post_author " .
                        "WHERE 1=1 " . $usersIDs .
                        " GROUP BY u.ID";
      $resultUsersPosts = $driver->query($sqlCountUsersPosts);

      while ($row = $resultUsersPosts->fetch_array()) {
          $usersPosts[$row["ID"]] = $row["count"];
      }
    }


    foreach ($users as $user) {
        printf(
            "ID: %d, Username: %s, E-mail: %s, Creation Date: %s\n",
            $user["ID"],
            $user["user_login"],
            $user["user_email"],
            $user["user_registered"]
        );
    }
}

/**
 * Prints a list of admin users from a Joomla website.
 *
 * @return bool              True if the website is built on top of Joomla.
 */
function listUsersFromJoomla()
{
    global $config, $driver;

    $query = "SELECT u.id, u.username
        FROM `" . $config['prefix'] . "usergroups` us, `" . $config['prefix'] . "users` u,
            `" . $config['prefix'] . "user_usergroup_map` uum
        WHERE us.id = uum.group_id AND uum.user_id = u.id
        AND `title` IN ('Super Users', 'Administrator', 'Super Administrator')";

    $result = $driver->query($query, true);

    if ($result === false) {
        $query = "SELECT u.id, u.username FROM `" . $config['prefix'] . "users` u WHERE u.usertype = 'Super Administrator'";
        $result = $driver->query($query);
    }


    if (!$result) {
        /**
         * Return True no matter if this operation failed.
         *
         * This guarantees that the calls for other listUsers methods will stop
         * as at this point we already know that the website is built on top of
         * the Joomla CMS, considering that the framework library is available.
         */
        return true;
    }

    $users = array();
    while ($row = $result->fetch_array()) {
        $users[] = $row;
    }

    foreach ($users as $row) {
        printf("ID: %d, Username: %s\n", $row['id'], $row['username']);
    }

    return true;
}

/**
 * Prints a list of admin users from a Magento website.
 *
 * @param  string $config Location of the configuration file.
 * @return bool           True if the website is built on top of Magento.
 */
function listUsersFromMagento($config)
{
    define('MAGENTO', realpath(dirname(__FILE__)));

    if (file_exists($config)) {
        include_once $config;
    }

    if (!class_exists('Mage')) {
        return false;
    }

    Mage::app();
    $app = Mage::app();
    umask(0);

    Mage::app('default');
    Mage::getSingleton('core/session', array('name' => 'adminhtml'));

    $users = Mage::getResourceModel('admin/roles_user_collection');

    foreach ($users as $roleuser) {
        $user = Mage::getModel('admin/user')->load($roleuser->getUserId());
        printf("ID: %d, Username: %s\n", $roleuser->getUserId(), $user->getUsername());
    }

    return true;
}

/**
 * Prints a list of admin users from a Vbulletin website.
 *
 * @param  string $config Location of the configuration file.
 * @return bool           True if the website is built on top of Vbulletin.
 */
function listUsersFromVbulletin($config)
{
    $vb_url = '';
    $login_url = '';

    if (file_exists($config)) {
        define('VB_ENTRY', 'sucuri');
        @chdir('core');
        include_once $config;
        @chdir('../');

        if (!class_exists('vB')) {
            return false;
        }

        $vb_options = vB::getDatastore()->getValue('options');
        $login_url = $vb_options['frontendurl_login'];
        $vb_url = VB_URL;
    }

    if (!isset($GLOBALS['vbulletin'])) {
        return false; /* not a vbulletin site */
    }

    if (!$login_url && is_array($GLOBALS['vbulletin']->options)) {
        $login_url = $GLOBALS['vbulletin']->options['bburl'];
    }

    if (!$vb_url && defined('VB_URL')) {
        $vb_url = VB_URL;
    }

    if ($vb_url && $login_url) {
        $parsed_vb_url = parse_url($vb_url);
        $parsed_login_url = parse_url($login_url);
        $new_url = array();

        foreach ($parsed_vb_url as $k => $v) {
            if ($k !== 'path' && isset($parsed_login_url[$k]) && $v !== $parsed_login_url[$k]) {
                $new_url[$k] = $parsed_login_url[$k];
            }
        }

        $new_url = array_merge($parsed_vb_url, $new_url);
        $redir_url = vbulletinBuildURL($new_url);

        if ($vb_url !== $redir_url) {
            header('Location: ' . $redir_url);
            exit(0);
        }
    }

    $users = $GLOBALS['vbulletin']->db->query_read(
        'SELECT * FROM ' . TABLE_PREFIX . 'user WHERE usertitle = "Administrator"'
    );

    while ($user = $GLOBALS['vbulletin']->db->fetch_array($users)) {
        printf("ID: %d, Username: %s\n", $user['userid'], $user['username']);
    }

    $GLOBALS['vbulletin']->db->free_result($user);

    return true;
}

/**
 * Takes most output from parse_url.
 *
 * @param  array $parsed_url Output from parse_url.
 * @return string            Formalize the output of parse_url.
 */
function vbulletinBuildURL($parsed_url)
{
    $scheme = isset($parsed_url['scheme']) ? $parsed_url['scheme'] . '://' : '';
    $host = isset($parsed_url['host']) ? $parsed_url['host'] : '';
    $path = isset($parsed_url['path']) ? $parsed_url['path'] : '';
    $query = isset($parsed_url['query']) ? '?' . $parsed_url['query'] : '';
    $fragment = isset($parsed_url['fragment']) ? '#' . $parsed_url['fragment'] : '';

    return $scheme . $host . $path . $query . $fragment;
}

/**
 * Prints a list of admin users from a Drupal website.
 *
 * @param  string $config Location of the configuration file.
 * @return void
 */
function listUsersFromDrupal($config)
{
    /* TODO: Implement function to print admin users from Drupal */
}

/**
 * Prints a list of admin users from a Prestashop website.
 *
 * @return void
 */
function listUsersFromPrestashop()
{
    global $config, $driver;
    $query = "SELECT DISTINCT * FROM " . $config['prefix'] . "employee e " .
        "JOIN " . $config['prefix'] . "access a " .
        "ON e.id_profile = a.id_profile " .
        "WHERE e.active = 1 ";

    if (isset($config['admin_id'])) {
        $role = $config['old'] ? 'id_tab' : 'id_authorization_role';
        $query .= "AND a.$role = " . $config['admin_id'];
    }

    $result = $driver->query($query);

    $admins = array();
    while ($row = $driver->fetchAssoc($result)) {
        $admins[] = $row;
    }

    if (!is_array($admins)) {
        echo "Unable to get PrestaShop users..\n";
        return;
    }

    foreach ($admins as $admin) {
            printf(
                "ID: %d, Username: %s, E-mail: %s\n",
                $admin['id_employee'],
                $admin['firstname'] . ' ' . $admin['lastname'],
                $admin['email']
            );
    }
    return;
}

/**
 * Prints a list of admin users from a Oscommerce website.
 *
 * @param  string $config Location of the configuration file.
 * @return void
 */
function listUsersFromOscommerce($config)
{
    /* TODO: Implement function to print admin users from Oscommerce */
}

/**
 * Prints a list of admin users from a Modx website.
 *
 * @param  string $config Location of the configuration file.
 * @return void
 */
function listUsersFromModx($config)
{
    /* TODO: Implement function to print admin users from Modx */
}

/**
 * Prints a list of admin users from a Opencart website.
 *
 * @param  string $config Location of the configuration file.
 * @return void
 */
function listUsersFromOpencart($config)
{
    /* TODO: Implement function to print admin users from Opencart */
}

/**
 * Prints a list of admin users from a Phpbb website.
 *
 * @param  string $config Location of the configuration file.
 * @return void
 */
function listUsersFromPhpbb($config)
{
    /* TODO: Implement function to print admin users from Phpbb */
}

/**
 * Prints information about the database tables.
 *
 * The information includes the table structure and size.
 *
 * @option list Describes and analyzes the tables in the database.
 *
 * @param  MySQLIDriver $driver        Database connection.
 * @param  array        $tablesColumns List of tables with their columns.
 * @param  array        $config        Application configuration.
 * @return void
 */
function listTables($driver, $tablesColumns, $config)
{
    $totalBlob = 0;
    $entries = array();

    foreach ($tablesColumns as $table => $columns) {
        $uniqueid = '--'; /* empty */
        $tableName = escapeHTML($table);

        /* primary key or composite primary key */
        if (array_key_exists('idname', $columns)) {
            $uniqueid = $columns['idname'];
        }

        /* get number of rows in this table */
        $sql = 'SELECT COUNT(*) AS total FROM ' . $driver->escapeName($table);
        $res = $driver->query($sql, true);
        if ($res === false) {
            printMsg("\nWARN: Failed to access " . $table . "\n");
            continue;
        }
        $res = $driver->fetchAssoc($res);
        $rows = intval($res['total']);
        $cols = count($columns);

        /* implode column names and composite keys */
        if (array_key_exists('idname', $columns)) {
            $shortColumns = $columns;
            unset($shortColumns['idname']);
            $colsText = smartImplode($shortColumns, ",\x20");
        } else {
            $colsText = smartImplode($columns, ",\x20");
        }

        /**
         * How much data the script needs to scan.
         *
         * We will multiply the number of rows against the number of columns on
         * each database table. However, because the unique identifier for each
         * table is usually safe (because it is almost always an integer) we
         * will decrease the number of columns by one before the operation.
         *
         * @var int
         */
        $usefulCols = ($cols > 0) ? ($cols - 1) : 0;
        $blobSize = $rows * $usefulCols;
        $totalBlob += $blobSize;

        /* add link to skip table on browser */
        if (!isTerminal()) {
            $tableName = '<a target="_self" href="?srun&resume&noise&scantable='
                . escapeHTML($table) . '">' . escapeHTML($table) . '</a>';
        }

        $entries[] = array(
            'Table' => $tableName,
            'ID' => escapeHTML($uniqueid),
            'Rows' => $rows,
            'Cols' => $cols,
            'Blob' => $blobSize,
            'Perc' => 0,
            'Columns' => escapeHTML($colsText),
        );
    }

    /**
     * Append percentages to all database tables.
     */
    foreach ($entries as $key => $data) {
        if ($totalBlob <= 0) {
            /* avoid impossible division by zero */
            $entries[$key]['Perc'] = '0%';
            continue;
        }

        $percentage = ($data['Blob'] * 100) / $totalBlob;
        $entries[$key]['Perc'] = sprintf('%.2g%%', $percentage);
    }

    /**
     * Setup ASCII table.
     * @var TabularData
     */
    $tabular = new TabularData();
    $tabular->setTitle('Database Tables');
    $tabular->addColumn('Table');
    $tabular->addColumn('ID');
    $tabular->addColumn('Rows');
    $tabular->addColumn('Cols');
    $tabular->addColumn('Blob');
    $tabular->addColumn('Perc');
    $tabular->addColumn('Columns');
    $tabular->addData($entries);
    $tabular->sortBy('Blob');

    $dbPrefix = isset($config['prefix']) ? $config['prefix'] : '[none]';
    $tabular->addNote('Table Prefix = ' . escapeHTML($dbPrefix));
    $tabular->addNote(sprintf('%d text/blob to scan', $totalBlob));
    $tabular->addNote(
        'A "--" ID means <a href="https://stackoverflow.com/a/15268888"'
        . ' target="_blank" rel="nofollow">no PRI/UNI but MUL</a>'
    );
    $tabular->addNote(
        'Empty "Columns" means <a href="https://stackoverflow.com/a/15268888"'
        . ' target="_blank" rel="nofollow">MUL</a> is in place'
    );

    $tabular->printTable();
}

/**
 * Searches and replaces content in a database table.
 *
 * This function only works if the script was called from a CLI.
 *
 * @param  MySQLIDriver $driver          Database connection.
 * @param  array        $tablesColumns   List of tables with their columns.
 * @param  array        $searchSignature List of signatures to search.
 * @return void
 */
function replaceInTerminal($driver, $tablesColumns, $searchSignature)
{
    // Not run from terminal or a search signature specified on the command line
    if (!isTerminal() || $_GET['s'] !== '') {
        return;
    }

    foreach ($searchSignature as $trigger => $sigArray) {
        // No cleanup was requested; only search
        if ($sigArray[CI_ACTION] === WARN) {
            return;
        }
    }

    echo "\n";
    $reply = askFromCmdLine('Clean the malware (save the changes)? [Y / N]');
    if ($reply === 'y' || $reply === 'Y') {
        unset($_GET['noclean']);
        $_POST = array('clean' => '1');
        searchAndClear($driver, $tablesColumns, $searchSignature);
    } else {
        echo "Not cleaned";
    }
}

/**
 * Displays a form to search for signatures in the database.
 *
 * If the script is executed via a web server, it will render a HTML form with
 * fields to allow the user to search for a string that will be matched against
 * the content of the database. However, if the script is executed via the CLI
 * a simple command prompt will be used to receive the user input.
 *
 * @return array Information about the malware cleanup.
 */
function getSearchSignature()
{
    $trigger = $_GET['s'];
    if (isset($_POST['s'])) {
        $trigger = $_POST['s'];
    }
    $action = isset($_POST['regex']) ? $_POST['regex'] : '';

    if (get_magic_quotes_gpc() && !isTerminal()) {
        $trigger = stripslashes($trigger);
        $action = stripslashes($action);
    }

    if (!isset($GLOBALS['isPlainText'])) {
        $GLOBALS['isPlainText'] = false;
    }

    if (!isset($GLOBALS['DB_SIGS_TEMPLATE'])) {
        $GLOBALS['DB_SIGS_TEMPLATE'] = array();
    }

    if (!$GLOBALS['isPlainText']) {
        // Print the form
        echo '<form action="" method="post">';

        printMsg("\nSearch for:\t\t");
        echo '<input type="text" name="s" value="' . escapeHTML($trigger) .
            '" placeholder="&lt;div id=&quot;coolhacker&quot;&gt;" style="width:30%">';

        printMsg("\n\nClean the regex:\t");
        echo '<input type="text" name="regex" value="' . escapeHTML($action) .
            '" placeholder="~&lt;div id=&quot;coolhacker&quot;&gt;[^&lt;&gt;]*?&lt;/div&gt;~" style="width:60%">';

        printMsg(
            "\n(You can also use the following pre-defined templates: "
            . implode(', ', array_keys($GLOBALS['DB_SIGS_TEMPLATE'])) . ")\n"
        );

        echo '<input type="checkbox" name="clean" value="1" id="clean">';
        echo '<label for="clean" class="inserted" data-content="' . "Clean the malware (save the changes)\n" . '"></label>';
        echo "\n" . '<input type="submit" value="Search">' . "\n";
        echo '</form>';
    }

    if ($trigger === '') {
        if (isTerminal()) {
            do {
                $trigger = askFromCmdLine('Search for');
            } while ($trigger === '');
            $action = askFromCmdLine('Clean the regex');
        } else {
            echo $GLOBALS['isPlainText'] ? "Please use\n" . "s=trigger\n" .
                "regex=~regex~\n" . "clean    to save the changes\n" : '</pre>';
            exit;
        }
    }

    $_GET['investigation'] = '1';
    if (!isset($_POST['clean'])) {
        $_GET['noclean'] = '1';
    } elseif (skipCleanup()) {
        unset($_GET['noclean']);
    }

    if ($trigger[0] === PCRE_DELIM) {
        reportFatalError(PCRE_DELIM . ' is not allowed as the first character of the trigger');
    }

    if ($action === '') {
        return array(
            $trigger => array('custom.db.search', WARN)
        );
    }

    if (!isset($GLOBALS['DB_SIGS_TEMPLATE'][$action])) {
        if (PCRE_DELIM !== $action[0]) {
            reportFatalError('Invalid regex, please use ' . PCRE_DELIM . ' as the delimiter');
        }

        if (preg_match($action, '') === false) {
            reportFatalError('Invalid regex');
        }
    }

    return array(
        $trigger => array('custom.db.search', $action)
    );
}

/**
 * Modifies a global variable DB_SKIPPED_TABLES
 *
 * Function skips the scan over any table specified in a GET request.
 *
 * @param  array $tablesColumns List of tables with their columns.
 * @return void
 */
function readSkipTable($tablesColumns)
{
    $GLOBALS['DB_SKIPPED_TABLES'] = array();

    if (isset($_GET['skiptable'])) {
        $tables = explode(',', $_GET['skiptable']);

        foreach ($tables as $table) {
            $GLOBALS['DB_SKIPPED_TABLES'][$table] = false;
        }
    }

    if (isset($_GET['scantable'])) {
        $tables = explode(',', $_GET['scantable']);
        $tablesToScan = array();

        // Convert the array to a set (hash table)
        foreach ($tables as $table) {
            if (!isset($tablesColumns[$table])) {
                printMsg("\nWARN: Not found the table to scan: ", $table);
                continue;
            }

            $tablesToScan[$table] = true;
            if (isset($GLOBALS['DB_SKIPPED_TABLES'][$table])) {
                printMsg("\nWARN: The same table in scantable and skiptable: ", $table);
            }
        }

        // Invert the set
        foreach ($tablesColumns as $table => $columns) {
            if (!isset($tablesToScan[$table])) {
                $GLOBALS['DB_SKIPPED_TABLES'][$table] = false;
            }
        }
    }
}

/**
 * Determines wheter a table must be skipped or not.
 *
 * The function checks the global DB_SKIPPED_TABLES variable, if the specified
 * table exists in this array then it returns a boolean True meaning that the
 * table must be skipped during the scan.
 *
 * @param  string $table Name of the table.
 * @return bool          True if the table must be skipped.
 */
function shouldSkipTable($table)
{
    if (!isset($GLOBALS['DB_SIGS_TEMPLATE'])) {
        $GLOBALS['DB_SIGS_TEMPLATE'] = array();
    }

    if (!isset($GLOBALS['DB_SKIPPED_TABLES'][$table])) {
        return false;
    }

    // Print the name of the skipped table once
    if ($GLOBALS['DB_SKIPPED_TABLES'][$table] === false) {
        printMsg("\nINFO: Skipped table ", $table);
        $GLOBALS['DB_SKIPPED_TABLES'][$table] = true;
    }

    return true;
}

/**
 * Prints the name of the skipped tables.
 *
 * @return void
 */
function checkSkippedTables()
{
    if (!isset($GLOBALS['DB_SIGS_TEMPLATE'])) {
        $GLOBALS['DB_SIGS_TEMPLATE'] = array();
    }

    foreach ($GLOBALS['DB_SKIPPED_TABLES'] as $table => $found) {
        if ($found === false) {
            printMsg("\nWARN: Not found the table to skip: ", $table);
        }
    }
}

/**
 * Continues with a previously started scan.
 *
 * The function reads a file located in the quarantine folder which contains a
 * list of associative names corresponding to the tables in the database that
 * were not read during the last scan.
 *
 * @return void
 */
function startResume()
{
    if (!isset($_GET['resume'])) {
        return;
    }

    $GLOBALS['g_lastTable'] = false;
    $GLOBALS['g_lastColumn'] = false;

    $f = @fopen(QUARANTINE_FOLDER . DIRECTORY_SEPARATOR . RESUME_FILE_NAME, 'r');

    if (false !== $f) {
        $info = fread($f, 65536);

        if ($info === false || $info === '') {
            fclose($f);
            @unlink(QUARANTINE_FOLDER . DIRECTORY_SEPARATOR . RESUME_FILE_NAME);

            if ($info === false) {
                reportFatalError('Reading sucuridbresume failed');
            } else {
                reportFatalError('Resume failed; please run with &list and skip the largest tables');
            }
        }

        fclose($f);

        list($a, $b) = explode("\n", $info, 2);
        $GLOBALS['g_lastTable'] = $a;
        $GLOBALS['g_lastColumn'] = $b;
    }

    if (!createQuarantineFolder()) {
        reportFatalError('Create quarantine folder failed');
    }

    $GLOBALS['g_resumeHandle'] = @fopen(QUARANTINE_FOLDER . DIRECTORY_SEPARATOR . RESUME_FILE_NAME, 'w');

    if (false === $GLOBALS['g_resumeHandle']) {
        reportFatalError('Saving sucuridbresume failed; please check permissions');
    }
}

/**
 * Determine whether to skip or not a table.
 *
 * @param  string $table  Name of the table.
 * @param  string $column Name of the column.
 * @return bool           True if we need to skip the table.
 */
function shouldSkipForResume($table, $column)
{
    if (!isset($GLOBALS['g_lastTable'])) {
        $GLOBALS['g_lastTable'] = false;
    }

    if (!isset($GLOBALS['g_lastColumn'])) {
        $GLOBALS['g_lastColumn'] = '';
    }

    if (!isset($GLOBALS['g_resumeHandle'])) {
        $GLOBALS['g_resumeHandle'] = null;
    }

    if (!isset($_GET['resume'])) {
        return false;
    }

    if ($GLOBALS['g_lastTable'] === false) {
        /* support composite primary keys */
        if (is_array($column)) {
            $column = array_pop($column);
        }

        // Save the table/column that we started the check
        if (false === ftruncate($GLOBALS['g_resumeHandle'], 0)
            || 0 !== fseek($GLOBALS['g_resumeHandle'], 0, SEEK_SET)
            || false === fwrite($GLOBALS['g_resumeHandle'], $table . "\n" . $column)
        ) {
            reportFatalError('Writing sucuri-sss-resume failed');
        }

        return false; // we are not resuming now
    }

    // Skip until the last table/column
    if ($table !== $GLOBALS['g_lastTable'] || $column !== $GLOBALS['g_lastColumn']) {
        return true;
    }

    printMsg("\nINFO: Resuming from " . $table . '.' . $column . '...');

    $GLOBALS['g_lastTable'] = false;
    $GLOBALS['g_lastColumn'] = false;

    return false; // Recheck this column again (some messages may be repeated from the previous run)
}

/**
 * Closes and deletes the resume file.
 *
 * The file that keeps tracks of the scanning process and is used to resume the
 * scan during a sudden stop, is closed with this function and then discarded
 * as a normal system resource.
 *
 * @return void
 */
function finishResume()
{
    if (!isset($GLOBALS['g_resumeHandle'])) {
        $GLOBALS['g_resumeHandle'] = null;
    }

    if (!isset($_GET['resume'])) {
        return;
    }

    fclose($GLOBALS['g_resumeHandle']);

    if (!@unlink(QUARANTINE_FOLDER . DIRECTORY_SEPARATOR . RESUME_FILE_NAME)) {
        echo "ERROR: deleting resume failed\n";
    }

    if (file_exists(QUARANTINE_FOLDER . DIRECTORY_SEPARATOR . RESUME_RESULTS)) {
        echo "Run &resumeresults to see resume results.\n";
    }
}

/**
 * Displays resume results.
 *
 * @return void
 */
function resumeResults()
{
    if (file_exists(QUARANTINE_FOLDER . DIRECTORY_SEPARATOR . RESUME_RESULTS)) {
        echo "Resume results: \n" . file_get_contents(QUARANTINE_FOLDER . DIRECTORY_SEPARATOR . RESUME_RESULTS);
        if (!@unlink(QUARANTINE_FOLDER . DIRECTORY_SEPARATOR . RESUME_RESULTS)) {
            echo "ERROR: deleting resume results failed\n";
        }
    } else {
        echo "Resume results file does not exist.\n";
    }

    exit;
}

/**
 * Checks whether the script is executed in a Terminal or Web Browser.
 *
 * This function checks for the existence of the REMOTE_ADDR and SHELL keys in
 * the global SERVER variable, which can be used to detect if the file is being
 * loaded via a Terminal emulator or a Web Browser.
 *
 * @return bool True if the script is executed in a Terminal.
 */
function isTerminal()
{
    return !isset($_SERVER['REMOTE_ADDR']) && (
        isset($_SERVER['SHELL'])
        || isset($_SERVER['TERM'])
    );
}

/**
 * Returns the HTML code with the information about the table.
 *
 * @param  array  $location Table information.
 * @param  string $type     Either plaintext, link or insertedlink.
 * @param  array  $matches  RegExp result following PHP standards.
 * @param  string $text     Content of the configuration file.
 * @return string           HTML anchor to link to the file content.
 */
function getLocationHTML($location, $type, $matches = null, $text = null)
{
    $ret = escapeHTML($location['table']);

    if (isset($location['column'])) {
        $ret .= '.' . escapeHTML($location['column']);
    }

    // If id is not set (a table without primary key or a composite primary key), then we cannot display the link.
    // Even if $type == 'link', return the plain text version with table.column.
    if (!isset($location['idname'])) {
        return $ret;
    }

    $ret .= ', ' . escapeHTML($location['idname']) . ' = ' . escapeHTML($location['id']);

    if ($type === 'plaintext') {
        return $ret;
    }

    $pos = '';
    if (isset($matches[0][1])) {
        $matches[0][0] = str_replace("\r\n", "\n", $matches[0][0]);
        $text = str_replace("\r\n", "\n", substr($text, 0, $matches[0][1]));
        if (function_exists('mb_strlen')) {
            // Locate the character index in UTF-8 encoding
            $match_start = mb_strlen($text, 'UTF-8');
            $match_end = $match_start + mb_strlen($matches[0][0], 'UTF-8');
        } else {
            // Calculate the byte offset
            $match_start = strlen($text);
            $match_end = $match_start + strlen($matches[0][0]);
        }
        $pos = '&match_start=' . $match_start . '&match_end=' . $match_end;
    }

    if (isset($_GET['dir'])) {
        $pos = $pos . '&dir=' . $_GET['dir'];
    }
    $link = '<a href="?srun'
        . '&showcontent'
        . '&t=' . escapeHTML($location['table'])
        . (isset($location['column']) ? '&c=' . escapeHTML($location['column']) : '')
        . '&id_name=' . escapeHTML($location['idname'])
        . '&id=' . escapeHTML($location['id']) . $pos . '" target="_blank"';

    if ($type === 'insertedlink') {
        return '"></span>' . $link . ' class="inserted" data-content="' . $ret
            . '"></a>' . '<span class="inserted warn" data-content="';
    }

    if ($type === 'link') {
        return $link . '>' . $ret . '</a>';
    }

    reportFatalError('Invalid type ' . $type);
    return '';
}

/**
 * Prints a message to the web or terminal with a status code.
 *
 * @param  boolean $status  Either true for success or false for failures.
 * @param  string  $message Message to print, cut to 255 characters.
 * @return void
 */
function logMsg($status = false, $message = '')
{
    if (!isset($GLOBALS['isPlainText'])) {
        $GLOBALS['isPlainText'] = false;
    }

    $message = str_replace("\n", "\x20", $message);
    $limit = ($GLOBALS['isPlainText'] ? 255 : 130);

    if (strlen($message) > $limit) {
        $message = substr($message, 0, $limit) . "\xe2\x80\xa6";
    }

    /* success and terminal */
    if ($status && $GLOBALS['isPlainText']) {
        prush("\xe2\x9c\x94 " . $message . "\n");
        return;
    }

    /* success and no terminal */
    if ($status && !$GLOBALS['isPlainText']) {
        prush("&#x2714 " . $message . "\n");
        return;
    }

    /* failure and terminal */
    if (!$status && $GLOBALS['isPlainText']) {
        prush("\xe2\x9c\x98 " . $message . "\n");
        return;
    }

    /* failure and no terminal */
    if (!$status && !$GLOBALS['isPlainText']) {
        prush("&#x2718 " . $message . "\n");
        return;
    }
}

/**
 * Prints a message to the console or web page.
 *
 * If the script is being executed in a Terminal emulator then this function
 * will print the message and details associated to the message into the same
 * Terminal, otherwise it prints into whatever interface the script is running
 * on, which in most cases will be a web browser, in this case, the message will
 * be merged with some HTML code.
 *
 * @param  string $msg     Message to print.
 * @param  string $details Additional information for the message.
 * @return void
 */
function printMsg($msg, $details = '')
{
    if (!isset($GLOBALS['isPlainText'])) {
        $GLOBALS['isPlainText'] = false;
    }

    if ($GLOBALS['isPlainText']) {
        prush($msg . $details);
        return;
    }

    if (strncmp($msg, "\nWARN:", 6) === 0) {
        prush('<span class="inserted warn" data-content="' . escapeHTML($msg) . '"></span>');
        $msg = '';
    }

    prush('<span class="inserted" data-content="' . escapeHTML($msg . $details) . '"></span>');
}

/**
 * Prints information about an error occurred during the scan.
 *
 * @param  string $msg Message to be printed into the console.
 * @return void
 */
function reportFatalError($msg)
{
    if (!isset($GLOBALS['isPlainText'])) {
        $GLOBALS['isPlainText'] = false;
    }

    $msg = 'ERROR: ' . $msg;

    if ($GLOBALS['isPlainText']) {
        echo "\n" . $msg;
    } else {
        echo '<span class="inserted warn" data-content="' . escapeHTML("\n" . $msg) . '"></span></pre>';
    }

    exit(1);
}

/**
 * Prints an inserted link into the console.
 *
 * @param  string $tool Name of the script with the insertion.
 * @return void
 */
function printInsertedLink($tool)
{
    if (!isset($GLOBALS['isPlainText'])) {
        $GLOBALS['isPlainText'] = false;
    }

    if ($GLOBALS['isPlainText']) {
        echo $tool;
        return;
    }

    $url = '?srun&' . $tool;
    $msg = $tool === 's' ? 'search' : $tool;
    echo '<a href="' . $url . '" class="inserted" data-content="' . $msg . '"></a>';
}

/**
 * Prints the HTML code with the final status of the database scan.
 *
 * @param  string $status      Status of the database scan.
 * @param  string $afterStatus Message to complement the status information.
 * @return string              Status of the database scan in HTML code.
 */
function getStatusHtml($status, $afterStatus = '')
{
    if (!isset($GLOBALS['isPlainText'])) {
        $GLOBALS['isPlainText'] = false;
    }

    if ($GLOBALS['isPlainText']) {
        return "\n" . $status . ': ' . $afterStatus;
    }

    if ($status === 'ERROR' || $status === 'WARN') {
        return "\n" . '<span class="inserted warn" data-content="' .
                $status . ': ' . escapeHTML($afterStatus) . '"></span>' .
                '<span class="hidden-copied">CLEARED: Cleared malware from database (manual review)</span>';
    }

    return "\n" . '<span class="cleared">' . $status . ':</span> ' . escapeHTML($afterStatus);
}

/**
 * Returns the text (or HTML) of the signature found in the database.
 *
 * @param  string $status        Name of the cleanup result in uppercase.
 * @param  string $signatureName Name of the signature found in the database.
 * @param  array  $location      Info about the table where the malware is.
 * @param  string $matches       RegExp result following PHP standards.
 * @param  string $text          Text containing the signature.
 * @param  string $msg           Optional text to print in the result.
 * @return string                Text or HTML of the signature found in the database.
 */
function reportMalware($status, $signatureName, $location = null, $matches = null, $text = null, $msg = null)
{
    if (!isset($GLOBALS['foundMalware'])) {
        $GLOBALS['foundMalware'] = false;
    }

    if (!isset($GLOBALS['isPlainText'])) {
        $GLOBALS['isPlainText'] = false;
    }

    // Output research messages only in the investigation mode
    if ($status === 'RESEARCH' && !isset($_GET['investigation'])) {
        return '';
    }

    // Get location and content matched by the regex
    if ($status === 'WARN' || $status === 'CLEARED' && skipCleanup()) {
        $type = 'link';
    } elseif ($status === 'RESEARCH' || $status === 'ERROR') {
        $type = 'insertedlink';
    } else {
        $type = 'plaintext';
    }

    if ($GLOBALS['isPlainText']) {
        $type = 'plaintext';
    }

    $locationHTML = $location === null ? '' : ': ' . getLocationHTML($location, $type, $matches, $text);
    $msgHTML = $msg === null ? '' : ' - ' . escapeHTML($msg);
    $signatureHTML = '. Details: ' . escapeHTML($signatureName);
    $contentHTML = '';

    if ($matches !== null) {
        // Below PHP 4.3, PREG_OFFSET_CAPTURE is not supported and match text is returned in $matches[0]
        $matchText = is_array($matches[0]) ? $matches[0][0] : $matches[0];
        $maxLen = isset($_GET['s']) ? 500 : 50;

        $content = substr($matchText, 0, $maxLen);
        if (strlen($matchText) > $maxLen) {
            $content = substr($matchText, 0, $maxLen - 10) . '...' . substr($matchText, -7);
        }
        $contentHTML = '. Content: ' . escapeHTML(preg_replace('/[\x00-\x1F\x7F]/', '`', $content));
        if ($status !== 'RESEARCH' && $status !== 'ERROR' && !$GLOBALS['isPlainText']) {
            // Hide the content from user to avoid disclosing our signatures
            $contentHTML = '<span class="inserted" data-content="' . $contentHTML . '"></span>';
        }
    }

    if ($status === 'CLEARED' || $status === 'FOUND') {
        if (skipCleanup() || $status === 'FOUND') {
            $statusHTML = getStatusHtml('FOUND', 'Found malware to clean');
        } elseif (!isset($location['idname'])) {
            $statusHTML = getStatusHtml('ERROR', 'Not cleaned (no primary key or a composite primary key)');
        } else {
            $statusHTML = getStatusHtml('CLEARED', 'Cleared malware from database');
        }
    } elseif ($status === 'OK') {
        // Omit the word "Details:"; print action message instead of the signature name
        $statusHTML = getStatusHtml('OK', $signatureName);
        $signatureHTML = '';
    } elseif ($status === 'WARN') {
        // Manual review is required
        $after = isset($location['idname']) ? 'Please review' : 'No primary key or a composite primary key';
        $statusHTML = getStatusHtml('WARN', $after);
    } elseif ($GLOBALS['isPlainText']) {
        $statusHTML = "\n" . $status; // RESEARCH, ERROR
    } else {
        // RESEARCH, ERROR - should not be sent to user
        $statusHTML = '<span class="inserted warn" data-content="' . "\n" . $status;
        $msgHTML .= '"></span>';
    }

    if (isset($_GET['resume'])) {
        $resume_file = @fopen(QUARANTINE_FOLDER . DIRECTORY_SEPARATOR . RESUME_RESULTS, 'a+');
        if (false !== $resume_file) {
            fwrite($resume_file, $statusHTML . $locationHTML . $signatureHTML);
        } else {
            echo "Could not write to resume results file.\n";
        }
    }

    $GLOBALS['foundMalware'] = true;
    return $statusHTML . $locationHTML . $signatureHTML . $contentHTML . $msgHTML;
}

/**
 * Checks if the table or column is whitelisted.
 *
 * @param  array $location  Table information.
 * @param  array $whitelist List of whitelisted tables.
 * @return bool             True if the table or column is whitelisted.
 */
function checkWhitelist($location, $whitelist)
{
    if (!isset($GLOBALS['config'])) {
        $GLOBALS['config'] = array('prefix' => '');
    }

    // Prepare for comparison with the whitelist. WordPress/Joomla prefix is written as <PREFIX>;
    // column name can follow after a dot.
    $table = $location['table'];
    if (!empty($GLOBALS['config']['prefix']) && strncmp($table, $GLOBALS['config']['prefix'], strlen($GLOBALS['config']['prefix'])) === 0) {
        $table = '<PREFIX>' . substr($table, strlen($GLOBALS['config']['prefix']));
    }

    // Lookup in the whitelist
    return isset($whitelist[$table]) || isset($whitelist[$table . '.' . $location['column']]) || isset($whitelist[$table . '.' . $location['id']]);
}

/**
 * Checks if whitelisted string appears in the scanned buffer.
 *
 * @param  string $signature  Signature name.
 * @param  string $buffer Scanned buffer.
 * @return bool True if the table or column is whitelisted.
 */
function checkStrWhitelist($signature, $buffer)
{
    global $WHITELIST_STRINGS;

    if (array_key_exists($signature, $WHITELIST_STRINGS)) {

        foreach ($WHITELIST_STRINGS[$signature] as $white_string) {
            if (strpos($buffer, $white_string) !== false) {
                return true;
            }
        }
    }

    else return false;
}


/**
 * Reverts the escaping applied to a string.
 *
 * @param  string $str    Text to remove the escaping.
 * @param  int    $nChars Number of characters to revert.
 * @return array          Array representation of the string.
 */
function unescapeString($str, $nChars)
{
    $inputLen = 0;
    $out = '';
    for ($i = 0; $i < $nChars; $i++) {
        if (!isset($str[$inputLen])) {
            return array(0, false); // Invalid string length
        }

        if ($str[$inputLen] !== '\\') {
            $out .= $str[$inputLen];
            $inputLen++;
            continue;
        }

        $hex = substr($str, $inputLen + 1, 2);
        if (!ctype_xdigit($hex)) {
            return array(0, false); // Invalid hex char
        }
        $out .= pack("H*", $hex);
        $inputLen += 3;
    }
    return array($inputLen, $out);
}

/**
 * Replaces content in a serialized object.
 *
 * Avoid the use of the built-in PHP unserialize function as it is vulnerable on
 * old PHP versions. Do a custom parsing function, replace inside the serialized
 * strings, and correct the string lengths.
 *
 * @param  string $pattern    Regular expression to change.
 * @param  string $serialized Serialized object as a string.
 * @param  bool   $isRegEx    True if pattern is a regexp, false for string.
 * @return array              Two-index length array with new serialized data.
 */
function replaceInSerialized($pattern, $serialized, $isRegEx)
{
    $valueToSkipRe = '/^(?:
        N; | b:[01];                     # null, Boolean
        | [rR] : [0-9]+;                 # references
        | [id] : [+-]? [0-9]+;           # an integer (as integer or double type)
        |   d  : [+-]? [0-9]* \\. [0-9]+ (?: [eE] [+-]? [0-9]+ )?;  # a floating point number (double)
        ) /x';
    $strRe = '/^ (?P<type> [sS]) : (?P<len> [0-9]+) : "/x';
    $compoundRe = '/^ (?:
          a : (?P<count> [0-9]+) : \\{
        | (?P<type> [OC]) : (?P<namelen> [0-9]+) : "(?P<name> [^"]+)" : (?P<clen> [0-9]+) : \\{
        ) /x';

    if (preg_match($valueToSkipRe, $serialized, $m)) {
        return array(strlen($m[0]), $m[0]);
    }

    if (preg_match($strRe, $serialized, $m)) {
        if ($m['type'] === 'S') {
            list($inputLen, $str) = unescapeString(substr($serialized, strlen($m[0])), $m['len']);
            if ($str === false) {
                return array(0, false);
            }
            $inputLen += strlen($m[0]);
        } else {
            $str = substr($serialized, strlen($m[0]), $m['len']);
            $inputLen = strlen($m[0]) + $m['len'];
        }

        if (substr($serialized, $inputLen, 2) !== '";') {
            return array(0, false);
        }

        $str = $isRegEx ? preg_replace($pattern, '', $str) : str_replace($pattern, '', $str);

        return array($inputLen + 2, 's:' . strlen($str) . ':"' . $str . '";');
    }

    if (preg_match($compoundRe, $serialized, $m)) {
        if (isset($m['namelen']) && intval($m['namelen']) !== strlen($m['name'])) {
            return array(0, false);
        }

        if (isset($m['type']) && $m['type'] === 'C') {
            // Custom serialization format, skip it (no search-and-replace)
            $inputLen = strlen($m[0]) + $m['clen'];
            if (substr($serialized, $inputLen, 1) !== '}') { // substr silently returns false if out of bounds
                return array(0, false);
            }
            return array($inputLen + 1, substr($serialized, 0, $inputLen + 1));
        }

        $out = $m[0];
        $inputPos = strlen($m[0]);
        $count = $m['count'] === '' ? $m['clen'] : $m['count'];

        for ($i = 0; $i < $count; $i++) {
            if ($m['count'] === '') { // Object - don't replace in the variable name
                list($len, $replaced) = replaceInSerialized('', substr($serialized, $inputPos), false);
            } else { // Array - replace in the index
                list($len, $replaced) = replaceInSerialized($pattern, substr($serialized, $inputPos), $isRegEx);
            }
            if ($replaced === false) {
                return array(0, false);
            }
            $inputPos += $len;
            $out .= $replaced;

            // Always replace in the value
            list($len, $replaced) = replaceInSerialized($pattern, substr($serialized, $inputPos), $isRegEx);
            if ($replaced === false) {
                return array(0, false);
            }
            $inputPos += $len;
            $out .= $replaced;
        }

        if (substr($serialized, $inputPos, 1) !== '}') {
            return array(0, false);
        }

        return array($inputPos + 1, $out . '}');
    }

    return array(0, false);
}

/**
 * Returns a clean version of a string.
 *
 * @param  string $pattern Expression to locate the malicious text.
 * @param  string $text    Text containing the malicious payload.
 * @param  bool   $isRegex Whether pattern is a regexp or a string.
 * @return string          Clean version of the text.
 */
function doCleanup($pattern, $text, $isRegex)
{
    // Quick check: if it's a serialized object/array/string
    if (isset($text[1]) && $text[1] !== ':') {
        return $isRegex ? preg_replace($pattern, '', $text) : str_replace($pattern, '', $text);
    }

    list($pos, $replaced) = replaceInSerialized($pattern, $text, $isRegex);

    if ($replaced === false || $pos !== strlen($text)) {
        // Not a valid serialized data; do a usual textual search-and-replace
        return $isRegex ? preg_replace($pattern, '', $text) : str_replace($pattern, '', $text);
    }

    return $replaced;
}

/**
 * Walks through all the signatures and removes the malicious payload.
 *
 * Look for the signatures in the text and remove the malware. Table and column
 * are used for whitelisting. Function returns NULL if no malware was cleaned.
 *
 * @param  string $text       Text containing the malicious payload.
 * @param  array  $signatures Regular expressions to match the malicious code.
 * @param  array  $location   Information about the table.
 * @return array              Clean version of the text.
 */
function clearMalwareFromText($text, $signatures, $location)
{
    global $WHITELIST_TABS;

    if (!isset($GLOBALS['DB_SIGS_TEMPLATE'])) {
        $GLOBALS['DB_SIGS_TEMPLATE'] = array();
    }

    if (!isset($GLOBALS['DB_NOCLEAN_FOR_ROBOT'])) {
        $GLOBALS['DB_NOCLEAN_FOR_ROBOT'] = array();
    }

    $out = '';
    $replaced = false;

    foreach ($signatures as $trigger => $sigArray) {
        if ($sigArray === NESTED) {
            continue;
        }

        // Check the trigger (regular expression or plain text search)
        $matches = null;
        if ($trigger[0] === PCRE_DELIM) {
            if (!preg_match($trigger, $text, $matches, PREG_OFFSET_CAPTURE)) {
                continue;
            }
        } elseif ($trigger[0] !== POSIX_DELIM || substr($trigger, -1) !== POSIX_DELIM) {
            $pos = strpos($text, $trigger);
            if ($pos === false) {
                continue;
            }
            $matches = array(array($trigger, $pos));
        }

        if ($sigArray[CI_NAME] === NESTED) {
            list($newText, $newOut) = clearMalwareFromText($text, $sigArray, $location);
            if ($newText !== null) {
                $text = $newText;
                $replaced = true;
            }
            $out .= $newOut;
            continue;
        }

        // Check the general tab/column whitelist
        if (checkWhitelist($location, $WHITELIST_TABS)) {
            $out .= reportMalware('RESEARCH', $sigArray[CI_NAME], $location, $matches, $text, 'Whitelisted location');
            continue;
        }

        // Check the sig->location whitelist
        if (isset($sigArray[CI_WHITELIST]) && checkWhitelist($location, $sigArray[CI_WHITELIST])) {
            $out .= reportMalware('RESEARCH', $sigArray[CI_NAME], $location, $matches, $text, 'Whitelisted');
            continue;
        }

        // Check the string whitelist
        if (checkStrWhitelist($sigArray[CI_NAME], $text)) {
            $out .= reportMalware('RESEARCH', $sigArray[CI_NAME], $location, $matches, $text, 'Whitelisted');
            continue;
        }

        // Do the action
        $action = isset($sigArray[CI_ACTION]) ? $sigArray[CI_ACTION] : WARN;
        if ($action === WARN) {
            $out .= reportMalware('WARN', $sigArray[CI_NAME], $location, $matches, $text);
        } elseif ($action === CLEAR_THIS) {
            $out .= reportMalware('CLEARED', $sigArray[CI_NAME], $location, $matches, $text);
            $text = doCleanup($trigger, $text, false);
            $replaced = true;
        } else {
            if (isset($GLOBALS['DB_SIGS_TEMPLATE'][$action])) {
                $action = str_replace('<TRIGGER>', preg_quote($trigger), $GLOBALS['DB_SIGS_TEMPLATE'][$action]);
            }
            if (!preg_match($action, $text, $matches, PREG_OFFSET_CAPTURE)) { // Fill the matches
                $msg = 'Trigger found; regex not found';
                $out .= reportMalware('RESEARCH', $sigArray[CI_NAME], $location, null, $text, $msg);
                continue;
            }

            $status = 'FOUND';
            if (!isset($_GET['robot']) || !isset($GLOBALS['DB_NOCLEAN_FOR_ROBOT'][$sigArray[CI_NAME]])) {
                $text = doCleanup($action, $text, true); // Do the actual cleanup
                $status = 'CLEARED';
                $replaced = true;
            }
            $out .= reportMalware($status, $sigArray[CI_NAME], $location, $matches, $text);
        }
    }

    return $replaced ? array($text, $out) : array(null, $out);
}

/**
 * Escapes the LIKE keyword in an SQL statement.
 *
 * @param  string $trigger SQL statement to be escaped.
 * @return string          Clean version of the SQL statement.
 */
function escapeLike($trigger)
{
    return str_replace(array('$', '%', '_'), array('$$', '$%', '$_'), $trigger);
}

/**
 * Prepares the WHERE conditions with triggers.
 *
 * Later we will insert table and column names there.
 *
 * @param  MySQLIDriver $driver        Database connection.
 * @param  array        $signatures    List of signatures to search.
 * @param  int          $maxConditions Maximum number of conditions.
 * @return array                       List of WHERE SQL statements.
 */
function prepareConditions($driver, $signatures, $maxConditions)
{
    $i = 0;
    $j = 0;
    $conditionSets = array(array(' WHERE '));
    $signatureSet = array();

    foreach ($signatures as $trigger => $nested) {
        if ($j !== 0) {
            // Add OR to the previous condition
            $conditionSets[$i][$j] .= ' OR ';
        }

        if ($trigger[0] === POSIX_DELIM && substr($trigger, -1) === POSIX_DELIM) {
            array_push($conditionSets[$i], ' REGEXP ' . $driver->escapeStr(substr($trigger, 1, -1)));
        } else {
            array_push($conditionSets[$i], ' LIKE ' . $driver->escapeStr('%' . escapeLike($trigger) . '%') . " ESCAPE '$'");
        }
        $j++;
        $signatureSet[$trigger] = $nested;

        if ($j >= $maxConditions) {
            // End the WHERE statement here and start another one
            array_push($conditionSets[$i], $signatureSet);
            $signatureSet = array();

            array_push($conditionSets, array(' WHERE '));
            $i++;
            $j = 0;
        }
    }

    // Delete the extra WHERE statement
    if ($j === 0) {
        array_pop($conditionSets);
    } else {
        array_push($conditionSets[$i], $signatureSet);
    }

    return $conditionSets;
}

/**
 * Locates the infected table entries and executes the cleaners.
 *
 * @param  MySQLIDriver $driver        Database connection.
 * @param  array        $tablesColumns List of tables with their columns.
 * @param  array        $signatures    Regular expressions to match the malicious code.
 * @return void
 */
function searchAndClear($driver, $tablesColumns, $signatures)
{
    global $config;

    // Break signatures into sets (20 triggers in each set)
    $conditionSets = prepareConditions($driver, $signatures, 20);
    $location = array();
    /**
     * By default the "Search & Replace" tool executes the malware cleanup
     * against the database once the infection is found. However, if the analyst
     * wants to see the infection before its cleaned they can send an additional
     * parameter via GET named "s" (in lowercase) to execute the search alone.
     *
     * @option s Sets the action to be executed, in this case "search".
     */
    $action = isset($_GET['s']) ? 'search' : 'cleanup';
    foreach ($tablesColumns as $table => $columns) {
        if (shouldSkipTable($table)) {
            continue;
        }

        // Remember location in the associative array

        $location['table'] = $table;
        $escapedId = '';
        if (isset($columns['idname'])) {
            $location['idname'] = $columns['idname'];
            $escapedId = ',' . $driver->escapeName($columns['idname']);
        } else {
            unset($location['idname']);
            unset($location['id']);
        }

        $escapedTable = $driver->escapeName($table);
        foreach ($columns as $i => $column) {
            if ($i === 'idname' || shouldSkipForResume($table, $column)) {
                continue;
            }

            if (is_array($column)) {
                /* skip composite keys; not necessary */
                /* idnames => [option_id, option_name] */
                continue;
            }

            $location['column'] = $column;
            $escapedColumn = $driver->escapeName($location['column']);

            // Run cleanup for each set

            foreach ($conditionSets as $conditions) {
                $signaturesSet = array_pop($conditions);

                // Set Scan Restrictions on rows that meet specific criteria, I.E trashed posts.

                $rowRestrictions = false;
                $rowConditions = "";
                if ($config['cms'] === 'WordPress'){
                    if (!isset($_GET['scantrash'])) {
                        if ($escapedTable == '"' . $GLOBALS['config']['prefix'] . 'posts"') {
                            $rowRestrictions = true;
                            $rowConditions = ' "post_status" LIKE \'%trash%\' ';
                        }

                        // Modify our WHERE statement if row restriction criteria have been met
                        if ($rowRestrictions) {
                            // Include ANY post NOT IN trash
                            $whereReplacement = ' WHERE ' . substr($escapedId, 1) . ' NOT IN (SELECT "ID" FROM ' . $escapedTable . ' WHERE ' . $rowConditions . ' ) AND ( ';
                            $conditions[0] = $whereReplacement;
                        }
                    } else {
                        if ($rowRestrictions) {
                            // Include ONLY posts IN trash
                            $whereReplacement = ' WHERE ' . substr($escapedId, 1) . ' IN (SELECT "ID" FROM ' . $escapedTable . ' WHERE ' . $rowConditions . ' ) AND ( ';
                            $conditions[0] = $whereReplacement;
                        }
                    }
                }

                // Search for the triggers using the previously prepared conditions

                $sql = 'SELECT ' . $escapedColumn . $escapedId . ' FROM ' . $escapedTable . implode($escapedColumn, $conditions);
                if ($rowRestrictions) {
                    $sql .= ");";
                } else {
                    $sql .= ";";
                }

                clearMalwareFromDb($driver, $location, $sql, $signaturesSet, $action);
            }
        }
    }
}

/**
 * Searches a signature in the database and clears the malicious code.
 *
 * @param  MySQLIDriver $driver     Database connection.
 * @param  array        $location   Information about the table.
 * @param  string       $sql        SQL statement to execute in the database.
 * @param  array        $signatures Malware identifiers to search and clear.
 * @param  string       $action     Name of the action to be executed.
 * @return void
 */
function clearMalwareFromDb($driver, $location, $sql, $signatures, $action)
{
    /**
     * To allow the security analyst to monitor the process followed by any of
     * the implemented features in the cleanup script, the script itself will
     * allow them to activate the verbose mode which will start printing labals
     * marking every step followed by each action.
     *
     * @option noise Prints information about what is currently happening.
     */
    if (isset($_GET['noise'])) {
        printMsg("\nSearching " . $location['table'] . '.' . $location['column'] . '...');
    }

    $result = $driver->query($sql);

    // If any trigger was found, try to find the triggers in the column text
    while ($row = $driver->fetchRow($result)) {
        if (isset($location['idname'])) {
            $location['id'] = $row[1];
        }
        list($cleared, $out) = clearMalwareFromText($row[0], $signatures, $location);

        if ($cleared !== null
            && !showUpdateDbError(updateDb($driver, $cleared, $row[0], $location, $action))
        ) {
            // Instead of CLEARED message, prepare the FOUND message
            list($cleared, $out) = clearMalwareFromText($row[0], $signatures, $location);
        }

        if ($out) {
            prush($out);
        }
    }
}

/**
 * Deletes entries from a database table.
 *
 * @param  MySQLIDriver $driver        Database connection.
 * @param  array        $tablesColumns List of tables with their columns.
 * @param  array        $config        Application configuration.
 * @return void
 */
function deleteRows($driver, $tablesColumns, $config)
{
    if (!isset($GLOBALS['DB_ROWS_TO_DELETE'])) {
        $GLOBALS['DB_ROWS_TO_DELETE'] = array();
    }

    if (!isset($GLOBALS['DB_ROWS_TO_DELETE'][$config['cms']])) {
        return;
    }

    $rules = $GLOBALS['DB_ROWS_TO_DELETE'][$config['cms']];

    foreach ($rules as $tableColumn => $values) {
        list($table, $column) = explode('.', $tableColumn, 2);

        if (strncmp($table, '<PREFIX>', strlen('<PREFIX>')) === 0) {
            $table = $config['prefix'] . substr($table, strlen('<PREFIX>'));
        }

        if (!isset($tablesColumns[$table])) {
            printMsg(
                "\nINFO: Table " . $table . " not found for CMS " . $config['cms'] .
                ', prefix ' . (empty($config['prefix']) ? 'not detected' : $config['prefix'])
            );
            continue;
        }

        if (shouldSkipTable($table)) {
            continue;
        }

        $location = array('table' => $table, 'idname' => $column);

        $vals = array();
        $col = $driver->escapeName($column) . ' LIKE ';
        foreach ($values as $value) {
            $vals[] = $col . $driver->escapeStr($value) . " ESCAPE '$'";
        }
        $vals = implode(' OR ', $vals);

        list($err, $out) = deleteRowsFromDb($driver, $location, $vals);

        if (!showUpdateDbError($err)) {
            // Instead of the "Removed row" message, prepare the "Found malicious row" message
            list($err, $out) = deleteRowsFromDb($driver, $location, $vals);
        }

        if ($out) {
            prush($out);
        }
    }
}

/**
 * Detects and reports or clears suspicious and malicious users from a DB
 *
 * @param  MySQLIDriver $driver        Database connection.
 * @param  array        $tablesColumns List of tables with their columns.
 * @param  array        $config        Application configuration.
 * @return void
 */
function checkDBUsers($driver, $tablesColumns, $config)
{

    if (!isset($GLOBALS['DB_USER_SIGNATURES'])) {
        $GLOBALS['DB_USER_SIGNATURES'] = array();
    }

    if (!isset($GLOBALS['DB_USER_SIGNATURES'][$config['cms']])) {
        return;
    }

    $signatures = $GLOBALS['DB_USER_SIGNATURES'][$config['cms']];

    foreach ($signatures as $signature => $value) {
        $table = $value[1];

        if (strncmp($table, '<PREFIX>', strlen('<PREFIX>')) === 0) {
            $table = $config['prefix'] . substr($table, strlen('<PREFIX>'));
        }

        if (!isset($tablesColumns[$table])) {
            printMsg(
                "\nINFO: Table " . $table . " not found for CMS " . $config['cms'] .
                ', prefix ' . (empty($config['prefix']) ? 'not detected' : $config['prefix'])
            );
            continue;
        }

        if (shouldSkipTable($table)) {
            continue;
        }

        $location = array('table' => $table, 'sig' => $signature, 'idname' => 'ID');
        $location['sigtype'] = $value[0];
        $match_regex = $value[2];

        list($err, $out) = deleteRowsFromDb($driver, $location, $match_regex);

        if (!showUpdateDbError($err)) {
            // Instead of the "Removed row" message, prepare the "Found malicious row" message
            list($err, $out) = deleteRowsFromDb($driver, $location, $match_regex);
        }

        if ($out) {
            prush($out);
        }

    }
}

/**
 * Checks the default role for new users in WordPress.
 *
 * If the website is based on WordPress, this function reads the options table
 * and checks whether the default role for new user accounts is different than
 * "subscriber" in which case will print a warning for the security analyze to
 * investigate.
 *
 * @param  MySQLIDriver $driver        Database connection.
 * @param  array        $tablesColumns List of tables with their columns.
 * @param  array        $config        Application configuration.
 * @return void
 */
function checkWPDefaultUserRole($driver, $tablesColumns, $config)
{
    if ('WordPress' !== $config['cms']) {
        return;
    }

    $table = $config['prefix'] . 'options';

    if (!isset($tablesColumns[$table])) {
        printMsg("\nWARN: Table " . $table . " not found for WordPress");
        return;
    }

    if (shouldSkipTable($table)) {
        return;
    }

    $res = $driver->query(
        'SELECT "option_value" FROM ' . $driver->escapeName($table) .
        ' WHERE "option_name" = \'default_role\' AND "option_value" <> \'subscriber\';'
    );

    $row = $driver->fetchRow($res);
    if ($row) {
        printMsg(
            "\nWARN: Default WordPress user role set to '" . $row[0] . "'",
            " instead of 'subscriber' in table " . $table .
            ', please notify the client to change this for security reasons.'
        );
    }
}

/**
 * Checks if the site_url was tampered in WordPress.
 *
 * If the website is based on WordPress, this function reads the options table
 * and checks whether the site_url value is different than the URI we are running
 * cleanup from in which case will print a warning for the security analyze to
 * investigate.
 *
 * @param  MySQLIDriver $driver        Database connection.
 * @param  array        $tablesColumns List of tables with their columns.
 * @param  array        $config        Application configuration.
 * @return void
 */
function checkWPSiteURL($driver, $tablesColumns, $config)
{
    if ('WordPress' !== $config['cms']) {
        return;
    }
    if (isTerminal()) {
        return;
    }

    $table = $config['prefix'] . 'options';

    if (!isset($tablesColumns[$table])) {
        printMsg("\nWARN: Table " . $table . " not found for WordPress");
        return;
    }

    if (shouldSkipTable($table)) {
        return;
    }
    $siteURL = $_SERVER['HTTP_HOST'];
    $res = $driver->query(
        'SELECT "option_value" FROM ' . $driver->escapeName($table) .
        ' WHERE "option_name" = \'siteurl\' AND "option_value" NOT LIKE \'%'.$siteURL.'%\';'
    );

    $row = $driver->fetchRow($res);
    if ($row) {
        printMsg(
            "\nWARN: WordPress siteurl value was changed to '" . $row[0] . "'",
            " instead of: \"". $siteURL ."\"" .
            "\nThis may be a sign of compromise. Correct value should be checked with the client."
        );
        echo ("<br>Review <a href=?srun&showcontent&t=" . $table . "&c=option_value&id_name=option_name&id=siteurl>SiteUrl</a> ".
        "manually. (This record may not exist in old and differ in multisite WP installations.)");
    }

    $res = $driver->query(
        'SELECT "option_value" FROM ' . $driver->escapeName($table) .
        ' WHERE "option_name" = \'home\' AND "option_value" NOT LIKE \'%'.$siteURL.'%\';'
    );

    $row = $driver->fetchRow($res);
    if ($row) {
        printMsg(
            "\nWARN: WordPress home value was changed to '" . $row[0] . "'",
            " instead of: \"". $siteURL ."\"" .
            "\nThis may be a sign of compromise. Correct value should be checked with the client."
        );
        echo ("<br>Review <a href=?srun&showcontent&t=" . $table . "&c=option_value&id_name=option_name&id=home>Home" .
        "</a> manually. (This record may not exist in old and differ in multisite WP installations.");
    }


}

/**
 * Checks if triggers are present in the database
 * and presents a message with a URL to list them.
 * @param  MySQLIDriver $driver        Database connection.
 */
function checkTriggers($driver)
{
    if (isTerminal()) {
        return;
    }
    $res = $driver->query(
        'show triggers'
    );
    $row = $driver->fetchRow($res);
    if ($row) {
        printMsg(
            "\n\n Triggers have been detected on the database. Please check them to ensure they are innocent here:"
        );
        printInsertedLink ('listTriggers');
    }
}

/**
 * lists triggers present in the database if any.
 * @param  MySQLIDriver $driver        Database connection.
 */
function listTriggers($driver)
{
    if (isTerminal()) {
        return;
    }
    $res = $driver->query(
        'show triggers'
    );
     printMsg(
            "\n\n Please note that the important field here is the 'Statement' field which is the actual query\n".
            "\n Here's some description about the notable fields you will see:".
            "\n [Trigger] --> Name of the trigger".
            "\n [Event] --> What action will trigger this".
            "\n [Table] --> In what table this ocurrs".
            "\n [Statement] --> The query that is run".
            "\n [Timing] --> Wether this ocurrs before or after what triggered this \n\n"
        );
        echo ('<hr>');

    while ($row = $driver->fetchAssoc($res)) {
        if ($row) {
            print_r($row);
        }
    }
}

/**
 * Determines if errors must be printed or not.
 *
 * @param  bool $updateRes Whether there are messages or not.
 * @return bool            Whether to print messages or not.
 */
function showUpdateDbError($updateRes)
{
    if (!isset($GLOBALS['updateErrMessages'])) {
        $GLOBALS['updateErrMessages'] = array();
    }

    if (!isset($GLOBALS['isPlainText'])) {
        $GLOBALS['isPlainText'] = false;
    }

    if (!is_int($updateRes) || !isset($GLOBALS['updateErrMessages'][$updateRes])) {
        return true;
    }

    if ($GLOBALS['isPlainText']) {
        echo "\n" . $GLOBALS['updateErrMessages'][$updateRes];
    } else {
        echo "\n" . '<span class="warn">' . $GLOBALS['updateErrMessages'][$updateRes] . '</span>';
    }

    // If the DB update fails, continue looking for malware in read-only mode
    $_GET['noclean'] = 1;
    return false;
}

/**
 * Append a database backup into the same file.
 *
 * @param  string $backupFilename Location of the backup file.
 * @param  string $backup         Additional data to backup.
 * @return bool                   Whether the operation succeeded or not.
 */
function addToBackup($backupFilename, $backup)
{
    $fh = @fopen($backupFilename, "ab");
    if (false === $fh) {
        return false;
    }

    if (fseek($fh, 0, SEEK_END) !== 0) {
        return false;
    }

    $size = ftell($fh);
    if ($size === 0) {
        $backup = BACKUP_COMMENT . "\n" . $backup;
    }

    $res = false !== fwrite($fh, encrypt($backup, SUCURI_KEY, $size));

    fclose($fh);
    return $res;
}

/**
 * Changes the value in a table row in the database.
 *
 * This function also creates a backup of the original content.
 *
 * @param  MySQLIDriver $driver        Database connection.
 * @param  string       $cleared       Clean version of the table row.
 * @param  string       $previousValue Original content of the table row.
 * @param  array        $location      Information about the table.
 * @param  string       $action        Name of the action to be executed.
 * @return bool                        Whether the operation succeeded or not.
 */
function updateDb($driver, $cleared, $previousValue, $location, $action)
{
    if (skipCleanup() || !isset($location['idname'])) {
        return true;
    }

    $backupFilename = getBackupFilename($action, $location['table']);

    if ($backupFilename === false) {
        return UPDATE_ERR_BACKUP_DIR;
    }

    // Prepare the SQL statements
    $update = 'UPDATE ' . $driver->escapeName($location['table']) . ' SET ' .
        $driver->escapeName($location['column']) . ' = ';

    $where = ' WHERE ' . $driver->escapeName($location['idname']) . ' = ' .
        $driver->escapeStr($location['id']) . ' AND ' .
        $driver->escapeName($location['column']) . ' = ';

    // Encrypt the backup and save it in that folder
    $backup = $update . $driver->escapeStr($previousValue) . $where .
        $driver->escapeStr($cleared) . ";\n\n";

    if (!addToBackup($backupFilename, $backup)) {
        return UPDATE_ERR_BACKUP_FILE;
    }

    // Change the column value in the database only when we have the backup
    $driver->query($update . $driver->escapeStr($cleared) . $where . $driver->escapeStr($previousValue) . ';');

    if ($driver->getAffectedRows() !== 1) {
        return UPDATE_ERR_CHANGED;
    }

    return true;
}

/**
 * Starts a transaction to delete some entries in the database.
 *
 * @param  MySQLIDriver $driver   Database connection.
 * @param  array        $location Information about the table.
 * @param  string       $where    Condition for the SQL statement.
 * @return array                  Result of the operation.
 */
function deleteRowsFromDb($driver, $location, $where)
{
    $fromWhere = ' FROM ' . $driver->escapeName($location['table']) . ' WHERE ' . $where . ";\n\n";

    $driver->begin();

    // Select the malicious rows and backup them
    $res = $driver->query('SELECT * ' . $fromWhere);
    list($columns, $types) = $driver->getColumnNamesTypes($location['table']);
    $values = array();
    $out = '';
    $warnOnly = false;

    if (isset($location['sigtype'])) {
        $warnOnly = $location['sigtype'] === USER_WARN;
        $msg = (skipCleanup() || $warnOnly) ? 'Found malicious DB user: ' : 'Removed malicious DB user: ';
        $msg .= $location['sig'];
    } else {
        $msg = skipCleanup() ? 'Found malicious row' : 'Removed row';
    }

    while ($row = $driver->fetchRow($res)) {
        $values[] = '(' . $driver->exportRow($row, $types) . ')';

        $location['id'] = $row[array_search($location['idname'], $columns)];
        $msgRow = $msg;
        if (isset($location['sigtype']) && array_search('user_login', $columns) !== false) {
            $msgRow .= ': ' . $row[array_search('user_login', $columns)];
        }
        $out .= reportMalware($warnOnly ? 'WARN' : 'CLEARED', $msgRow, $location);
    }

    /**
     * Prints the status of the infection and skips the cleanup.
     *
     * @option noclean Disables the cleanup of the malicious data.
     */
    if (count($values) === 0 || skipCleanup() || $warnOnly) {
        // No malware was found or cleanup is disabled
        $driver->rollback();
        return array(true, $out);
    }

    $total = count($columns);
    for ($i = 0; $i < $total; $i++) {
        $columns[$i] = $driver->escapeName($columns[$i]);
    }

    $backup = '';
    foreach ($values as $value) {
        $backup .= 'INSERT INTO ' . $driver->escapeName($location['table'])
            . ' (' . implode(', ', $columns) . ') VALUES ' . $value
            . ";\n\n";
    }

    $backupFilename = getBackupFilename('deleterows', $location['table']);
    if ($backupFilename === false) {
        $driver->rollback();
        return array(UPDATE_ERR_BACKUP_DIR, $out);
    }

    // Save the backup
    if (!addToBackup($backupFilename, $backup)) {
        $driver->rollback();
        return array(UPDATE_ERR_BACKUP_FILE, $out);
    }

    // Delete the rows
    $driver->query('DELETE ' . $fromWhere);
    $driver->commit();
    return array(true, $out);
}

/**
 * Returns information about the table from an SQL statement.
 *
 * @param  string $sql SQL statement that will be parsed.
 * @return array|null  Information about the table.
 */
function getLocationFromSql($sql)
{
    // Escaped names and values are not handled correctly by these regular expressions;
    // we would need a full SQL lexer to handle them.
    $location = array();
    if (preg_match('@^UPDATE "([^"]+)" SET "([^"]+)" = @', $sql, $match)) {
        $location['table'] = $match[1];
        $location['column'] = $match[2];

        if (preg_match('@ WHERE "([^"]+)" = \'([^\']+)\' AND @', $sql, $match)) {
            $location['idname'] = $match[1];
            $location['id'] = $match[2];
            return $location;
        }
    } elseif (preg_match('@^INSERT INTO "([^"]+)" \("([^"]+)"@', $sql, $match)) {
        // We cannot determine the primary key from the INSERT statement,
        // so just take the first column for the message
        $location['table'] = $match[1];
        $location['idname'] = $match[2];

        if (preg_match('@\) VALUES \(\'([^\']+)\'@', $sql, $match)) {
            $location['id'] = $match[1];
            return $location;
        }
    }
    return null;
}

/**
 * Find SQL statements associated to the same action.
 *
 * The default behavior of this function is to restore the backup file by
 * executing every SQL statement individually after splitting the file by new
 * lines, this clearly poses a problem with certain statements, for example,
 * with stored procedures where they could be composed of multiple lines and
 * separated by the DELIMITER keyword. This iteration is trying to fix this
 * problem by executing all the SQL statements previously collected with a
 * DELIMITER keyword.
 *
 * @param  string $content All SQL statements that will be executed.
 * @return array           SQL statements grouped by actions.
 */
function getMultiSQLStatements($content = '')
{
    $sqlGroup = '';
    $sqlGroups = array();
    $appendToGroup = false;

    /* Clean and formalize SQL statements */
    // $content = str_replace("\x60", '', $content);
    $content = str_replace(";END", ";\nEND", $content);
    $content = str_replace("\x20END", "\nEND", $content);
    $content = str_replace("\x20BEGIN", "\nBEGIN", $content);

    $lines = explode("\n", $content); /* assume unique lines */

    foreach ($lines as $line) {
        $line = trim($line);

        /* Skip empty lines, comments and SQL delimiters */
        if (empty($line)
            || strpos($line, "--\x20") === 0
            || strpos($line, 'DELIMITER') === 0
        ) {
            continue;
        }

        if (strpos($line, 'CREATE DEFINER') === 0
            || strpos($line, 'CREATE FUNCTION') === 0
            || strpos($line, 'CREATE PROCEDURE') === 0
        ) {
            $appendToGroup = true;
            $sqlGroup = $line;

            /**
             * Close group if the END was in the previous line.
             *
             * In some cases when the group of SQL statements is all merged in
             * a single line, both the CREATE and END keywords will be at the
             * beginning and end of the same instruction, making this condition
             * more or less irrelevant. To prevent conflicts with other groups
             * we will check if this line also contains the END keyword and
             * close the group right here.
             */
            if (strpos($line, ';END') !== false
                || strpos($line, ";\x20END") !== false
            ) {
                $appendToGroup = false;
                $sqlGroups[] = $sqlGroup;
            }

            continue;
        }

        if (strpos($line, 'END') === 0) {
            $appendToGroup = false;
            $sqlGroups[] = $sqlGroup . "\n" . $line;
            continue;
        }

        if ($appendToGroup) {
            $sqlGroup .= "\n" . $line;
            continue;
        }

        $sqlGroups[] = $line;
    }

    return $sqlGroups;
}

/**
 * Restores the content of a specific database.
 *
 * @param  MySQLIDriver $driver  Database connection.
 * @param  string       $content List of SQL statements to execute.
 * @return void
 */
function restoreBackup($driver, $content)
{
    if (!isset($GLOBALS['isPlainText'])) {
        $GLOBALS['isPlainText'] = false;
    }

    $sqlLines = getMultiSQLStatements($content);

    prush("Restoring " . count($sqlLines) . " SQL statements...\n");

    foreach ($sqlLines as $sql) {
        if ($sql === '' || $sql === BACKUP_COMMENT) {
            continue;
        }

        $res = $driver->query($sql);

        if (strpos($sql, "CREATE\x20") === 0
            || strpos($sql, "DROP\x20") === 0
        ) {
            logMsg($res !== false, $sql);
            continue;
        }

        $location = getLocationFromSql($sql);
        $naffected = $driver->getAffectedRows();

        if ($naffected === 0) {
            prush(reportMalware('ERROR', 'The DB column was changed after backup. Please restore manually', $location) . "\n");
        } elseif ($naffected !== 1) {
            prush(reportMalware('ERROR', 'Unexpected naffected: ' . $naffected, $location) . "\n");
        } else {
            prush(reportMalware('OK', isset($location['column']) ? 'Restored DB column' : 'Restored DB row', $location) . "\n");
        }
    }

    printMsg("\n\nINFO: Restore complete");

    prush($GLOBALS['isPlainText'] ? "\n" : '</pre>');
}

/**
 * Creates a new directory to store the infected data.
 *
 * @return bool True if the directory was created, false otherwise.
 */
function createQuarantineFolder()
{
    // Create the directory (race condition here)
    if (!is_dir(QUARANTINE_FOLDER)) {
        if (!mkdir(QUARANTINE_FOLDER, 0755, true)) {
            return false;
        }
    }

    // Harden the directory
    if (!touch(QUARANTINE_FOLDER . DIRECTORY_SEPARATOR . 'index.html')
        || !touch(QUARANTINE_FOLDER . DIRECTORY_SEPARATOR . 'index.php')
    ) {
        return false;
    }

    $fh = fopen(QUARANTINE_FOLDER . DIRECTORY_SEPARATOR . '.htaccess', 'w');
    if ($fh === false || false === fwrite($fh, 'deny from all')) {
        return false;
    }
    fclose($fh);
    return true;
}

/**
 * Returns the path to the requested database backup.
 *
 * @param  string $action Category associated to the backup.
 * @param  string $table  Name of the table.
 * @return string|bool    Path to the database backup or false.
 */
function getBackupFilename($action, $table)
{
    if (!isset($GLOBALS['backupFilename'])) {
        $GLOBALS['backupFilename'] = array();
    }

    // Sanitize table name
    $table = preg_replace('/[^a-zA-Z0-9_-]/', '-', $table);

    // If the current backup file is too large or does not exist, generate a new one
    clearstatcache();
    if (isset($GLOBALS['backupFilename'][$table]) && filesize($GLOBALS['backupFilename'][$table]) <= 500000) {
        return $GLOBALS['backupFilename'][$table];
    }

    if (!createQuarantineFolder()) {
        return false;
    }

    // Generate the file name. There is a race condition here, but it's mostly okay
    // because scan usually takes more than 1 sec. Ideally, we would use fopen(..., "xb"),
    // but it's not supported until PHP 4.3.2.
    $suffix = BACKUP_APPENDIX . time();
    $prefix = QUARANTINE_FOLDER . DIRECTORY_SEPARATOR . $action . '-' . $table;
    $rand = '';

    while (file_exists($prefix . $rand . $suffix)) {
        $rand = mt_rand(0, 1000000000);
    }

    if (!$GLOBALS['backupFilename']) {
        $GLOBALS['backupFilename'] = array();
    }

    $GLOBALS['backupFilename'][$table] = $prefix . $rand . $suffix;

    return $GLOBALS['backupFilename'][$table];
}

/**
 * Encodes the passed content with certain key.
 *
 * @param  string $content Text to be encrypted.
 * @param  string $key     Password for the encryption.
 * @param  int    $shift   Number of encryption cycles.
 * @return string          New text already encrypted.
 */
function encrypt($content, $key, $shift)
{
    $result = '';
    $contentLength = strlen($content);
    $keyLength = strlen($key);

    // XOR the first 'shift' bytes
    $shift %= $keyLength;
    $processedLength = min($keyLength - $shift, $contentLength);
    // substr() returns false for an empty $content string, so we do an additional check

    if ($processedLength > 0) {
        $result = substr($content, 0, $processedLength) ^ substr($key, $shift, $processedLength);
    }

    $restLength = ($contentLength - $processedLength) % $keyLength;
    $mainPartEnd = $contentLength - $restLength;

    for ($i = $processedLength; $i < $mainPartEnd; $i += $keyLength) {
        $result .= $key ^ substr($content, $i, $keyLength);
    }

    if ($restLength > 0) {
        $result .= substr($content, $mainPartEnd) ^ substr($key, 0, $restLength);
    }

    return $result;
}

/**
 * Prints the list of available backup files.
 *
 * @return void
 */
function listBackupFiles()
{
    if (!isset($GLOBALS['isPlainText'])) {
        $GLOBALS['isPlainText'] = false;
    }

    $dateLimit = null;

    /**
     * @option date Timestamp to filter the files in the backup archive.
     */
    if (isset($_GET['date'])) {
        $dateLimit = intval($_GET['date']);

        if ($dateLimit <= 0 || $dateLimit > time()) {
            $dateLimit = time();
        }
    }

    $backupFiles = array();

    $handle = @opendir(QUARANTINE_FOLDER);
    if (!$handle) {
        reportFatalError('Failed to open the quarantine folder');
    }

    while (false !== ($filename = @readdir($handle))) {
        $key = explode(BACKUP_APPENDIX, $filename, 2);
        if (is_dir($filename) || count($key) < 2) {
            continue;
        }

        $fileDate = intval($key[1]);

        if ($dateLimit !== null && ($fileDate > $dateLimit || $fileDate < $dateLimit - 24 * 60 * 60)) {
            continue;
        }

        $backupFiles[$filename] = $fileDate;
    }
    closedir($handle);

    arsort($backupFiles);

    foreach ($backupFiles as $filename => $fileDate) {
        $fileDate = @date('Y-m-d H:i:s', $fileDate);
        $restoreLink = '?srun&restore=' . base64_encode($filename);
        if ($GLOBALS['isPlainText']) {
            echo "\n" . $fileDate . ' - ' . $filename . ' - restore=' . base64_encode($filename);
        } else {
            echo "\n" . '<a href="' . $restoreLink . '" target="_blank">' . $fileDate . ' - ' .
                escapeHTML($filename) . "</a>";
        }
    }

    echo "\n\n" . count($backupFiles) . ' backup file' . (count($backupFiles) === 1 ? '' : 's') . ' found';
    echo $GLOBALS['isPlainText'] ? "\n" : '</pre>';
}

/**
 * Restores the selected database.
 *
 * @param  MySQLIDriver $driver   Database connection.
 * @param  string       $filename Database backup.
 * @return void
 */
function restore($driver, $filename)
{
    if (empty($filename)) {
        listBackupFiles();
        $driver->disconnect();
        exit;
    }

    if (isset($_POST['file_content'])) {
        if (get_magic_quotes_gpc()) {
            $_POST['file_content'] = stripslashes($_POST['file_content']);
        }
        restoreBackup($driver, $_POST['file_content']);
        $driver->disconnect();
        exit;
    }

    $filename = base64_decode($filename);
    if (!preg_match('@^[A-Za-z0-9_-]+' . preg_quote(BACKUP_APPENDIX, '@') . '[0-9]+$@', $filename)) {
        reportFatalError('Invalid backup file name: ' . $filename);
    }

    $fh = fopen(QUARANTINE_FOLDER . DIRECTORY_SEPARATOR . $filename, 'rb');
    if ($fh === false || false === ($contents = fread($fh, 8 * 1048576))) {
        reportFatalError('Unable to read file: ' . $filename);
    }
    fclose($fh);

    // Decrypt the file
    $contents = encrypt($contents, SUCURI_KEY, 0);

    $valid = strncmp($contents, BACKUP_COMMENT, strlen(BACKUP_COMMENT)) === 0 ||
        strpos($contents, "\nWHERE ") !== false;
    if (isTerminal()) {
        echo "File: " . $filename;
        if (!$valid) {
            reportFatalError('Invalid backup file');
        }
        echo "\n" . $contents . "\n";
        $reply = askFromCmdLine('Restore this backup? [Y / N]');
        if ($reply === 'y' || $reply === 'Y') {
            restoreBackup($driver, $contents);
        }
    } else {
        echo '<form method="post" style="height:100%" action="">';
        echo "File: " . escapeHtml($filename);
        if ($valid) {
            echo ' - <input type="submit" name="submit" value="Restore" />';
        } else {
            echo ' - Invalid backup file';
        }
        echo '<textarea name="file_content" style="margin: 2px; height: 85%; width: 100%;">';
        echo escapeHtml($contents);
        echo '</textarea></form></pre>';
    }
    $driver->disconnect();
    exit;
}

/**
 * Prints the content of a specific table.
 *
 * @param  MySQLIDriver $driver Database connection.
 * @param  string       $table  Name of the table.
 * @return void
 */
function dumpTableData($driver, $table)
{
    list($columns, $types) = $driver->getColumnNamesTypes($table);

    // Prepare the header with column names
    $columnsEscaped = array();
    $total = count($columns);
    for ($i = 0; $i < $total; $i++) {
        $columnsEscaped[$i] = $driver->escapeName($columns[$i]);
    }
    $columnsEscaped = implode(', ', $columnsEscaped);
    $header = 'INSERT INTO ' . $driver->escapeName($table) . ' (' . $columnsEscaped . ') VALUES';

    // Print all rows
    $allValues = '';
    $count = 0;

    $res = $driver->queryLowMemory('SELECT * FROM ' . $driver->escapeName($table) . ';');
    while ($row = $driver->fetchRow($res)) {
        $values = "\n(" . $driver->exportRow($row, $types) . ')';

        if (strlen($allValues) >= 500000) { // Split long SQL statements to avoid MySQL timeouts
            echo $header . $allValues . ";\n";
            $allValues = '';
        }

        if ($allValues) {
            $allValues .= ',';
        }
        $allValues .= $values;
        $count++;
    }

    if ($count === 0) {
        return;
    }

    echo $header . $allValues . ";\n\n";
}

/**
 * Triggers the download of the entire database.
 *
 * @param  MySQLIDriver $driver        Database connection.
 * @param  string        $tables        List of table names.
 * @param  array        $tablesColumns List of tables with their columns.
 * @param  string       $db            Name of the database.
 * @return void
 */
function dumpTables($driver, $tables, $tablesColumns, $db)
{
    global $tmp_file, $tmp_file_name;

    if (!isset($_SERVER['SERVER_NAME'])) {
        $serverName = date('ymd-His');
    } else {
        $serverName = preg_replace('/[^a-zA-Z0-9.-]/', '-', $_SERVER['SERVER_NAME']);
    }

    while (@ob_end_clean());
    ob_start('ob_handler', 256);
    date_default_timezone_set("GMT");
    header('Content-Type: application/sql; charset=utf-8');
    header('Content-Disposition: attachment; filename=dump_' . $serverName . '.sql');

    echo "-- Sucuri DB dump\n\n";
    echo $driver->getDumpHeader() . "\n";
    echo $driver->getCreateDBSql($db);

    if ($tables) {
        $tablesColumns = array_flip(explode(',', $tables));
    }

    foreach ($tablesColumns as $table => $_) {
        echo $driver->getCreateTableSql($table);
        dumpTableData($driver, $table);
    }

    echo "-- End of the dump\n";
    ob_end_clean();
    rewind($tmp_file);
    fpassthru($tmp_file);
    fclose($tmp_file);
    @unlink($tmp_file_name);

    exit;
}

function ob_handler($buffer)
{
    global $tmp_file;
    fwrite($tmp_file, $buffer);
}

/**
 * Prints to console the content of the data array.
 *
 * Each header must be an array with a required "name" attribute and additional
 * optional keys to specify an alias (alternative name for the column) and the
 * alignment of the data (either left or right, by default: left). If there is
 * no "alias" the function takes the value from the required "name" key.
 *
 * Similar to the example below:
 *
 * <pre>
 * Headers [
 *   [name: "ID"],
 *   [name: "Name"],
 *   [name: "Population", align: "right"],
 *   [name: "Percentage", alias: "Density", align: "right"],
 *   [name: "LandArea", alias: "Land Area", align: "right"],
 * ]
 *
 * +----+---------------------------+------------+---------+--------------+
 * | Tabular Data                                                         |
 * +----+---------------------------+------------+---------+--------------+
 * | ID | Name                      | Population | Density | Land Area    |
 * +----+---------------------------+------------+---------+--------------+
 * | 1  | Ontario                   | 13,448,494 |  38.30% |   908,699.33 |
 * | 2  | Quebec                    |  8,164,361 |  23.20% | 1,356,625.27 |
 * | 3  | British Columbia          |  4,648,055 |  13.20% |   922,503.01 |
 * | 4  | Alberta                   |  4,067,175 |  11.60% |   640,330.46 |
 * | 5  | Manitoba                  |  1,278,365 |   3.60% |   552,370.99 |
 * | 6  | Saskatchewan              |  1,098,352 |   3.10% |   588,243.54 |
 * | 7  | Nova Scotia               |    923,598 |   2.60% |    52,942.27 |
 * | 8  | New Brunswick             |    747,101 |   2.10% |    71,388.81 |
 * | 9  | Newfoundland and Labrador |    519,716 |   1.50% |   370,514.08 |
 * | 10 | Prince Edward Island      |    142,907 |   0.41% |     5,686.03 |
 * | 11 | Northwest Territories     |     41,786 |   0.12% | 1,143,793.86 |
 * | 12 | Nunavut                   |     35,944 |   0.10% | 1,877,778.53 |
 * | 13 | Yukon                     |     35,874 |   0.10% |   474,712.68 |
 * +----+---------------------------+------------+---------+--------------+
 * </pre>
 *
 * @category Terminal
 * @package  Cleanup
 * @author   Yorman <yorman@sucuri.net>
 * @license  https://opensource.org/licenses/MIT MIT
 * @link     https://sucuri.net/
 * @date     Nov 23, 2017
 */
class TabularData
{
    /**
     * @var array List of entries to print in the terminal.
     */
    private $data;

    /**
     * @var string Optional title for the terminal table.
     */
    private $title;

    /**
     * @var array Names for the columns in the table.
     */
    private $headers;

    /**
     * @var array Two-dimensional array where each item contains information
     * about the data on each column of the table, more specifically, the number
     * of characters of the entry with the longest string.
     */
    private $longest;

    /**
     * @var array Lines composing the table for buffering.
     */
    private $lines;

    /**
     * @var array List of optional foot notes.
     */
    private $notes;

    /**
     * @var int Total number of entries in the data array.
     */
    private $total;

    /**
     * Constructor.
     */
    public function __construct()
    {
        $this->title = '';
        $this->data = array();
        $this->headers = array();
        $this->longest = array();
        $this->lines = array();
        $this->notes = array();
        $this->total = 0;
    }

    /**
     * Attaches the data that will be tabulated.
     *
     * @param  array $data Array with multiple entries.
     * @return void
     */
    public function addData($data)
    {
        $this->data = $data;
        $this->total = count($data);
    }

    /**
     * Adds a new column to the table.
     *
     * @param  string $name  Name of the array key with the data.
     * @param  string $align Either "left" or "right" (default: "left")
     * @param  string $alias Optional name for the column.
     * @return void
     */
    public function addColumn($name, $align = 'left', $alias = '')
    {
        if (empty($name)) {
            return;
        }

        if ($alias === '') {
            $alias = $name;
        }

        $this->headers[] = array(
            'name' => $name, /* key to find the data in the array */
            'alias' => $alias, /* column name to print in the console */

            /**
             * This condition should be read as "where do you want to put the
             * white spaces" instead of "where do you want to put the text" as
             * we want to use white spaces to align the text in the column. So
             * if the function call has align to the "right", we have to use
             * STR_PAD_LEFT to fill up the left side of the string.
             */
            'align' => ($align === 'right' ? STR_PAD_LEFT : STR_PAD_RIGHT),
        );

        $this->longest[$name] = strlen($alias);
    }

    /**
     * Adds a note to the foot of the table.
     *
     * @param  string $text Message to append at the end of the table.
     * @return void
     */
    public function addNote($text = '')
    {
        $this->notes[] = $text;
    }

    /**
     * Defines an optional title for the table.
     *
     * @param  string $title Name of the data.
     * @return void
     */
    public function setTitle($title)
    {
        $this->title = $title;
    }

    /**
     * Finds the longest text on each column.
     *
     * @return void
     */
    private function findLongestText()
    {
        foreach ($this->data as $row) {
            foreach ($this->headers as $header) {
                $length = 0;
                $name = $header['name'];

                if (array_key_exists($name, $row)) {
                    $length = strlen(strip_tags($row[$name]));
                }

                if ($length > $this->longest[$name]) {
                    $this->longest[$name] = $length;
                }
            }
        }
    }

    /**
     * Sort an array with a user-defined comparison function.
     *
     * This function sorts an array such that array indices maintain their
     * correlation with the array elements they are associated with, using a
     * user-defined comparison function. This is used mainly when sorting
     * associative arrays where the actual element order is significant. If two
     * members compare as equal, their relative order in the sorted array is
     * undefined.
     *
     * @param  string $field Name of the column to sort by.
     * @return void
     */
    public function sortBy($field = '')
    {
        $GLOBALS['sortByField'] = $field;
        usort($this->data, 'TabularData::sortByAlgo');
    }

    /**
     * Compares two variables.
     *
     * @param  mixed $a Value to compare.
     * @param  mixed $b Value to be compared with.
     * @return int      Zero if equal, one for greater than, minus one otherwise.
     */
    private static function sortByAlgo($a, $b)
    {
        $field = @$GLOBALS['sortByField'];

        if ($a[$field] === $b[$field]) {
            return 0; /* they are the same */
        }

        return $a[$field] > $b[$field] ? -1 : 1;
    }

    /**
     * Tabulate and print the data to the terminal.
     *
     * @throws Exception
     * @return void
     */
    public function printTable()
    {
        if (!is_array($this->data) || empty($this->data)) {
            throw new Exception('There is no data to print', 3114);
        }

        $start = microtime(true);

        $this->findLongestText();
        $this->printTableSeparator();
        $this->printTableTitle();
        $this->printTableSeparator();
        $this->printTableHeader();
        $this->printTableSeparator();
        $this->printTableContent();
        $this->printTableSeparator();

        foreach ($this->notes as $note) {
            if (isTerminal()) {
                $this->lines[] = strip_tags($note);
                continue;
            }

            $this->lines[] = $note;
        }

        $end = microtime(true) - $start;

        $this->lines[] = sprintf('%d rows in set (%f secs)', $this->total, $end);

        /* Browser; print all lines from buffer */
        if (!isTerminal()) {
            prush('<style type="text/css">');
            prush('.tabular {');
            prush('    width: 100%;');
            prush('    overflow-x: scroll;');
            prush('    white-space: pre;');
            prush('    border: none;');
            prush('}');
            prush('</style>');
            prush("<div class='tabular'>");
            foreach ($this->lines as $line) {
                prush('<div>' . $line . '</div>');
            }
            prush('</div>');
            return;
        }

        /* Terminal; print all lines from buffer */
        foreach ($this->lines as $line) {
            prush($line . "\n");
        }
    }

    /**
     * Prints a line of dashes and plus signs to separate.
     *
     * @return void
     */
    private function printTableSeparator()
    {
        $line = '';

        foreach ($this->headers as $header) {
            $line .= '+' . str_repeat('-', $this->longest[$header['name']] + 2);
        }

        $this->lines[] = $line . '-+';
    }

    /**
     * Prints the title of the table.
     *
     * @return void
     */
    private function printTableTitle()
    {
        /* total table width, with separators */
        $total = 3 * (count($this->longest) - 1);

        foreach ($this->longest as $col => $width) {
            $total += $width;
        }

        $line = "|\x20";

        if (strlen($this->title) > $total) {
            $line .= substr($this->title, 0, $total) . '…';
        } else {
            $line .= str_pad($this->title, $total + 1, "\x20", STR_PAD_RIGHT);
        }

        $this->lines[] = $line . "\x20|";
    }

    /**
     * Prints the header of the table.
     *
     * @return void
     */
    private function printTableHeader()
    {
        $line = '';

        foreach ($this->headers as $header) {
            $line .= "|\x20";
            $line .= str_pad($header['alias'], $this->longest[$header['name']]);
            $line .= "\x20";
        }

        $this->lines[] = $line . "\x20|";
    }

    /**
     * Prints the content of the table.
     *
     * @return void
     */
    private function printTableContent()
    {
        for ($i = 0; $i < $this->total; $i++) {
            $line = '';

            foreach ($this->headers as $header) {
                $a = $this->longest[$header['name']];
                $b = strip_tags($this->data[$i][$header['name']]);
                $c = strlen(strip_tags($this->data[$i][$header['name']]));
                $spaces = str_repeat("\x20", $a - $c);

                $line .= "|\x20";
                $line .= ($header['align'] === STR_PAD_LEFT ? $spaces : '');
                $line .= $this->data[$i][$header['name']];
                $line .= ($header['align'] === STR_PAD_RIGHT ? $spaces : '');
                $line .= "\x20";
            }

            $this->lines[] = $line . "\x20|";
        }
    }
}

/**
 * Skips the modification of the database and only prints the status of the
 * infection rather than cleaning the infected data. This is useful if you want
 * to see what the script is going to modify before it happens. This option is
 * automatically set if the script finds a problem during an update of one of
 * the records, to prevent future failures it sets itself to read-only mode and
 * simply prints the subsequent infected records.
 *
 * @option noclean Disables the cleanup of the malicious data.
 *
 * @return bool True if the GET parameter "noclean" exists, false otherwise.
 */
function skipCleanup()
{
    return (bool) isset($_GET['noclean']);
}

/**
 * Prints text and immediately flush system output buffer.
 *
 * Outputs all parameters. No additional newline is appended. This is not
 * actually a function (it is a language construct), so you are not required to
 * use parentheses with it. echo (unlike some other language constructs) does
 * not behave like a function, so it cannot always be used in the context of a
 * function. Additionally, if you want to pass more than one parameter to echo,
 * the parameters must not be enclosed within parentheses.
 *
 * @param  string $text The parameter to output.
 * @return void
 */
function prush($text)
{
    echo $text;
    @ob_flush();
    @flush();
}

/**
 * Merges all the values from an array into a string.
 *
 * The "smart" part of this function in comparison with the built-in function
 * "implode" is that it handles multi-dimensional arrays. You can refer to the
 * example below for a better understanding.
 *
 * Input: [1, 2, 3, [4, 5, 6], [7, 8, 9]]
 * Output: "1, 2, 3, 4, 5, 6, 7, 8, 9"
 *
 * @param  array  $list Possibly a multi-dimensional array.
 * @param  string $glue String to concatenate the items in the list.
 * @return string       Merged version of the list as a string.
 */
function smartImplode($list = array(), $glue = ",\x20")
{
    $output = '';

    foreach ($list as $key => $values) {
        if (is_array($values)) {
            $output .= ",\x20" . smartImplode($values, $glue);
            continue;
        }

        if (is_string($values)) {
            $output .= ",\x20" . $values;
            continue;
        }
    }

    return substr($output, 2);
}

/**
 * Finds all stored procedures and functions from a MySQL database.
 *
 * A stored procedure is a set of Structured Query Language (SQL) statements
 * with an assigned name, which are stored in a relational database management
 * system as a group, so it can be reused and shared by multiple programs.
 *
 * A benefit of stored procedures is that you can centralize data access logic
 * into a single place that is then easy for DBA's to optimize. Stored
 * procedures also have a security benefit in that you can grant execute rights
 * to a stored procedure but the user will not need to have read/write
 * permissions on the underlying tables. This is a good first step against SQL
 * injection.
 *
 * @see https://dev.mysql.com/doc/refman/5.7/en/create-procedure.html
 * @see https://dev.mysql.com/doc/refman/5.7/en/show-create-procedure.html
 *
 * @param  MySQLIDriver $driver Database connection.
 * @param  string       $group  Either "PROCEDURE" or "FUNCTION".
 * @param  array        $row    Raw associative data from the database.
 * @param  bool         $limit  True to include the SQL delimiter, false otherwise.
 * @return array                Information associated to a single stored procedure.
 */
function getStoredProcedure($driver, $group = '', $row = array(), $limit = false)
{
    $sql = sprintf(
        'SHOW CREATE %s %s.%s;',
        $group,
        $driver->escapeName($row['Db']),
        $driver->escapeName($row['Name'])
    );
    $data = $driver->fetchAssoc($driver->query($sql));

    /* Either "Create Procedure" or "Create Function" */
    $filter = sprintf('Create %s', ucwords(strtolower($group)));
    $row['Procedure'] = $data[$filter];
    $row['SqlMode'] = array();
    $row['CssClass'] = '';

    if (array_key_exists('sql_mode', $data)) {
        /* ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,…,NO_ZERO_DATE */
        $row['SqlMode'] = explode(',', $data['sql_mode']);
    }

    /* ignore normal procedures */
    if ($row['Db'] === 'sys') {
        $row['CssClass'] .= "\x20normal";
    }

    /* mark DUMPFILE SQL statement as suspicious */
    if (stripos($row['Procedure'], 'DUMPFILE') !== false) {
        $row['CssClass'] .= "\x20suspicious";
    }

    /* mark PHP code as suspicious */
    if (stripos($row['Procedure'], '<?php') !== false) {
        $row['CssClass'] .= "\x20suspicious";
    }

    /* include the SQL delimiter if necessary */
    if ($limit === true) {
        $row['Procedure'] = sprintf(
            "DELIMITER\x20;;\n%s\x20;;\nDELIMITER\x20;",
            $row['Procedure'] /* original sql statement */
        );
    }

    return $row;
}

/**
 * Returns all stored procedures and functions.
 *
 * @param  MySQLIDriver $driver Database connection.
 * @return array                List of all stored procedures and functions.
 */
function getStoredProcedures($driver)
{
    $entries = array();
    $groups = array('PROCEDURE', 'FUNCTION');

    foreach ($groups as $group) {
        $res = $driver->query(sprintf('SHOW %s STATUS;', $group));

        while ($row = $driver->fetchAssoc($res)) {
            $entries[] = getStoredProcedure($driver, $group, $row);
        }
    }

    return $entries;
}

/**
 * Deletes one single stored procedure after a POST request.
 *
 * @param  MySQLIDriver $driver Database connection.
 * @return void
 */
function handleStoredProcedureDeletion($driver)
{
    if (!isset($_POST['procedure_delete'])
        || !isset($_POST['procedure_db'])
        || !isset($_POST['procedure_type'])
        || !isset($_POST['procedure_name'])
    ) {
        return;
    }

    $data = getStoredProcedure(
        $driver,
        $_POST['procedure_type'],
        array('Db' => $_POST['procedure_db'], 'Name' => $_POST['procedure_name']),
        true /* include the SQL statement delimiters */
    );

    $bakfile = getBackupFilename('delprocedure', $_POST['procedure_db']);

    if ($bakfile === false) {
        printMsg("3356 - Backup file for the stored procedure is not available.\n");
        return;
    }

    if (!addToBackup($bakfile, $data['Procedure'])) {
        printMsg("3361 - Stored procedure was not backuped up before deletion.\n");
        return;
    }

    $driver->query(
        sprintf(
            'DROP %s IF EXISTS %s.%s',
            $_POST['procedure_type'],
            $_POST['procedure_db'],
            $_POST['procedure_name']
        )
    );
}

/**
 * Finds all stored procedures from a MySQL database.
 *
 * @option procedures Finds all stored procedures from a MySQL database.
 * @option procedures.name=TYPE:db.procedure Prints a specific database stored procedure.
 * @option procedures.delete=TYPE:db.procedure Deletes a specific database stored procedure.
 *
 * @param  MySQLIDriver $driver Database connection.
 * @return void
 */
function printStoredProcedures($driver)
{
    /* print details for one single entry (in terminal mode) */
    if (isTerminal() && isset($_GET['procedures_name'])) {
        echo "\n\n"; /* separator*/

        /* check valid format; expected -> TYPE:db.procedure */
        if (preg_match('/^([A-Z]+):([^\.]+)\.(.+)$/', $_GET['procedures_name'], $match)) {
            $row = array('Db' => $match[2], 'Name' => $match[3]);
            $data = getStoredProcedure($driver, $match[1], $row);

            printf("Database: %s\n", $data['Db']);
            printf("Name: %s\n", $data['Name']);
            foreach ($data['SqlMode'] as $idx => $mode) {
                printf("SQL Mode #%d: %s\n", ($idx + 1), $data['SqlMode'][$idx]);
            }
            printf("Procedure:\n%s\n", $data['Procedure']);
            return;
        }

        printMsg("Missing database name or procedure name.\n");
        return;
    }

    /* delete a single stored procedure (in terminal mode) */
    if (isTerminal() && isset($_GET['procedures_delete'])) {
        echo "\n\n"; /* separator*/

        /* check valid format; expected -> TYPE:db.procedure */
        if (preg_match('/^([A-Z]+):([^\.]+)\.(.+)$/', $_GET['procedures_delete'], $match)) {
            $_POST['procedure_delete'] = true;
            $_POST['procedure_db'] = $match[2];
            $_POST['procedure_type'] = $match[1];
            $_POST['procedure_name'] = $match[3];
            handleStoredProcedureDeletion($driver);
            printMsg("3420 - Stored procedure " . $match[2] . "." . $match[3] . " was deleted.\n");
            return;
        }

        printMsg("Missing database name or procedure name.\n");
        return;
    }

    /* print the entire list (in terminal mode) */
    if (isTerminal()) {
        echo "\n\n"; /* separator*/
        $tabular = new TabularData();
        $entries = getStoredProcedures($driver);
        $tabular->setTitle('Stored Procedures');
        $tabular->addColumn('Type');
        $tabular->addColumn('Created');
        $tabular->addColumn('Modified');
        $tabular->addColumn('Definer');
        $tabular->addColumn('Security_type');
        $tabular->addColumn('Db');
        $tabular->addColumn('Name');
        $tabular->addData($entries);
        $tabular->printTable();
        return;
    }

    ?>
    <div class="procedures">
        <style type="text/css">
        body {
            /* y-overflow for long procedures */
            padding-bottom: 300px;
        }
        .procedures table {
            border: 1px solid #999;
            border-bottom: 0;
            border-right: 0;
            border-spacing: 0;
            position: relative;
            width: 100%;
        }
        .procedures table .normal td {
            color: #999;
        }
        .procedures table .comment {
            background: #efefef;
            border-bottom-right-radius: 3px;
            border-top-right-radius: 3px;
            border: 1px solid #999;
            box-shadow: 0 0 5px #999;
            color: #000;
            display: none;
            left: 0;
            margin-left: -1px;
            margin-top: 11px;
            padding: 20px;
            position: absolute;
            white-space: pre-wrap;
            width: 750px;
            word-break: break-all;
        }
        .procedures table .suspicious .comment {
            background: #ffadb2;
            border-color: #ff6051;
        }
        .procedures table tr:hover .comment {
            display: block;
        }
        .procedures table th,
        .procedures table td {
            padding: 2px 5px;
        }
        .procedures table th {
            background: #efefef;
            border-bottom: 1px solid #999;
            border-right: 1px solid #999;
            text-align: left;
            text-transform: uppercase;
        }
        .procedures table td {
            border: 1px solid #999;
            border-left: 0;
            border-top: 0;
        }
        .procedures table .procedure_form {
            padding: 0;
            text-align: center;
        }
        .procedures table .procedure_form form {
            margin: 0;
        }
        </style>
        <?php
        handleStoredProcedureDeletion($driver);
        $entries = getStoredProcedures($driver);
        ?>
        <table>
            <thead>
                <tr>
                    <th>&nbsp;</th>
                    <th>Type</th>
                    <th>Created</th>
                    <th>Modified</th>
                    <th>Definer</th>
                    <th>Security</th>
                    <th>Db</th>
                    <th>Name</th>
                    <th>&nbsp;</th>
                </tr>
            </thead>
            <tbody>
            <?php foreach ($entries as $row) : ?>
                <tr class="<?php echo $row['CssClass']; ?>">
                    <td><span class="comment"><?php echo htmlentities($row['Procedure']); ?></span></td>
                    <td><?php echo $row['Type']; ?></td>
                    <td><?php echo $row['Created']; ?></td>
                    <td><?php echo $row['Modified']; ?></td>
                    <td><?php echo $row['Definer']; ?></td>
                    <td><?php echo $row['Security_type']; ?></td>
                    <td><?php echo $row['Db']; ?></td>
                    <td><?php echo $row['Name']; ?></td>
                    <td class="procedure_form">
                        <form method="post">
                            <input type="hidden" name="procedure_delete" value="true">
                            <input type="hidden" name="procedure_db" value="<?php echo $row['Db']; ?>">
                            <input type="hidden" name="procedure_name" value="<?php echo $row['Name']; ?>">
                            <input type="hidden" name="procedure_type" value="<?php echo $row['Type']; ?>">
                            <?php if ($row['Db'] === 'sys') : ?>
                                <button type="submit" disabled>delete</button>
                            <?php else : ?>
                                <button type="submit">delete</button>
                            <?php endif; ?>
                        </form>
                    </td>
                </tr>
            <?php endforeach; ?>
            </tbody>
        </table>
    </div>
    <?php
}

/**
 * Prints all the available options in the script.
 *
 * @option help Prints all the available options in the script.
 *
 * @return void
 */
function printScriptUsage()
{
    if (!is_readable(__FILE__)) {
        return;
    }

    $maxlen = 0;
    $options = array();
    $lines = file(__FILE__, FILE_SKIP_EMPTY_LINES | FILE_IGNORE_NEW_LINES);

    foreach ($lines as $line) {
        if (strpos($line, "@option\x20") !== false) {
            $index = strpos($line, "@option\x20");
            $line = substr($line, $index + 8);
            $index = strpos($line, "\x20");
            $option = substr($line, 0, $index);
            $desc = substr($line, $index + 1);
            $length = strlen($option);

            if ($length > $maxlen) {
                $maxlen = $length;
            }

            $options[$option] = $desc;
        }
    }

    if (empty($options)) {
        return;
    }

    echo "\n\nUsage:\n";

    foreach ($options as $option => $desc) {
        printf(
            "\x20\x20%s\x20%s\n",
            str_pad($option, $maxlen, "\x20", STR_PAD_RIGHT),
            $desc
        );
    }
}
